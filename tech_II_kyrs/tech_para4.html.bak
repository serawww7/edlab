<!-- tech_para4.html
     –ü–ê–†–ê 4 (–∞—É–¥–∏—Ç–æ—Ä–Ω–æ) –¥–ª—è —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–≤ –∑ –ø–µ—Ä–µ—Ä–æ–±–∫–∏ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó —Ç–≤–∞—Ä–∏–Ω–Ω–∏—Ü—Ç–≤–∞
     –¢–µ–º–∞: –ú–ê–†–ö–£–í–ê–ù–ù–Ø –¢–ê –ï–¢–ò–ö–ï–¢–ö–ê ‚Äî —Å–∫–ª–∞–¥ —ñ –∞–ª–µ—Ä–≥–µ–Ω–∏ (–≤–∏–¥—ñ–ª–µ–Ω–Ω—è), —Ö–∞—Ä—á–æ–≤–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å,
           —à—Ç—Ä–∏—Ö–∫–æ–¥ EAN-13 (GTIN), QR-–¥–∞–Ω—ñ –ø–∞—Ä—Ç—ñ—ó, —á–µ–∫ 58 –º–º, NFC, CSV-–∂—É—Ä–Ω–∞–ª.
     –§–æ–∫—É—Å: —Ç–µ–ª–µ—Ñ–æ–Ω–∏/–ü–ö; –±–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫; –≥–æ—Ç–æ–≤–æ –¥–ª—è GitHub Pages —Ç–∞ Moodle (iframe).
     –û–±–ª–∞–¥–Ω–∞–Ω–Ω—è: —Ç–µ–ª–µ—Ñ–æ–Ω–∏; (–æ–ø—Ü.) —Ç–µ—Ä–º–æ–ø—Ä–∏–Ω—Ç–µ—Ä 58 –º–º; NFC-–º—ñ—Ç–∫–∏.

     –ü—Ä–∏–º—ñ—Ç–∫–∞ –∫–æ–Ω—Ç—Ä–∞—Å—Ç—É: —Ç–µ–º–Ω—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—å –º–∞—é—Ç—å —Å–≤—ñ—Ç–ª–∏–π —Ç–µ–∫—Å—Ç (.dark).
     –£–í–ê–ì–ê: —Ü–µ –Ω–∞–≤—á–∞–ª—å–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –û—Å—Ç–∞—Ç–æ—á–Ω—ñ –º–∞–∫–µ—Ç–∏ —É–∑–≥–æ–¥–∂—É–π—Ç–µ –∑ —á–∏–Ω–Ω–∏–º –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º —Ç–∞ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–º–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º–∏.
-->
<!DOCTYPE html>
<html lang="uk">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>–ü–∞—Ä–∞ 4 (—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏) ‚Äî –ï—Ç–∏–∫–µ—Ç–∫–∞: —Å–∫–ª–∞–¥/–∞–ª–µ—Ä–≥–µ–Ω–∏, —Ö–∞—Ä—á–æ–≤–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å, EAN-13, QR, —á–µ–∫ 58 –º–º, NFC, CSV</title>
<meta name="color-scheme" content="light dark">
<style>
  :root{
    --bg:#0b1220; --card:#0f172a; --muted:#94a3b8; --text:#e2e8f0;
    --accent:#22c55e; --accent-2:#60a5fa; --warn:#f59e0b; --bad:#ef4444; --good:#10b981; --line:#1f2937;
    --darkcell:#0b1324; --darkink:#e6eef9; --darkink2:#e5e7eb;
  }
  *{box-sizing:border-box}
  body{margin:0;background:linear-gradient(180deg,#0b1220,#111827 30%,#0b1220);color:var(--text);
       font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,"Helvetica Neue",Arial,sans-serif;line-height:1.55}
  .wrap{max-width:1100px;margin:0 auto;padding:24px 16px 64px}
  .badge{display:inline-block;padding:6px 10px;border:1px solid var(--line);background:#0b1220;border-radius:999px;
         font-size:12px;color:var(--muted);letter-spacing:.3px}
  h1{font-size:34px;margin:6px 0 12px;line-height:1.15;
     background:linear-gradient(90deg,#60a5fa,#22c55e);-webkit-background-clip:text;-webkit-text-fill-color:transparent}
  h2{font-size:22px;margin:28px 0 12px} h3{font-size:18px;margin:20px 0 8px;color:#cbd5e1}
  p{margin:10px 0}.small{font-size:12px;color:#9fb0c8}.muted{color:#93a3b5}.mono{font-family:ui-monospace,Menlo,Consolas,Monaco,"Courier New",monospace}
  .btn{display:inline-block;padding:10px 14px;border-radius:10px;border:1px solid #223049;background:#0d1a2e;color:#dbeafe;text-decoration:none;cursor:pointer}
  .btn:hover{background:#0f1f39}
  .grid{display:grid;gap:12px}.g2{grid-template-columns:repeat(2,minmax(0,1fr))}.g3{grid-template-columns:repeat(3,minmax(0,1fr))}
  @media (max-width:1000px){.g2,.g3{grid-template-columns:1fr}}
  .row{display:flex;gap:10px;flex-wrap:wrap}
  .card{background:linear-gradient(180deg,#0f172a,#0b1220);border:1px solid var(--line);border-radius:16px;padding:16px;margin:12px 0;box-shadow:0 6px 24px rgba(0,0,0,.25)}
  .box{border:1px solid #223049;border-radius:12px;padding:12px;background:var(--darkcell);color:var(--darkink)}
  .ok{color:var(--good)} .warn{color:var(--warn)} .bad{color:var(--bad)}
  .table{width:100%;border-collapse:separate;border-spacing:0;overflow:auto;border-radius:12px;border:1px solid #223049}
  .table th,.table td{padding:8px 10px;border-bottom:1px solid #1f2937;font-size:14px;vertical-align:top}
  .table thead th{background:#0c1629;color:#a5b4fc;text-align:left;position:sticky;top:0}
  .table tbody tr:nth-child(even){background:var(--darkcell);color:var(--darkink2)}
  .table td.dark,.table th.dark{background:var(--darkcell)!important;color:var(--darkink2)!important}
  .out{background:var(--darkcell);color:var(--darkink2);border:1px dashed #263042;padding:10px 12px;border-radius:10px;word-break:break-all}
  input[type="text"],input[type="number"],input[type="date"],input[type="time"],select,textarea{width:100%;padding:8px 10px;border-radius:10px;border:1px solid #223049;background:#0d1a2e;color:#e6eef9}
  textarea{min-height:84px}
  /* –ß–µ–∫ 58 –º–º */
  .ticket{width:58mm;background:#fff;color:#000;padding:6mm 4mm;border-radius:6px;box-shadow:0 0 0 1px #e5e7eb inset;font-family:"Courier New",ui-monospace,monospace}
  .ticket h4{margin:0 0 6px;font-size:13px;text-align:center}.ticket p{margin:2px 0;font-size:12px}.ticket .line{border-top:1px dashed #111;margin:6px 0}
  .ticket small{font-size:10px}
  /* –í–±—É–¥–æ–≤–∞–Ω–æ –≤ Moodle (iframe) ‚Üí —Å–≤—ñ—Ç–ª–∏–π –≤–∏–≥–ª—è–¥ */
  html.embedded body{background:#fff;color:#111}
  html.embedded .card{background:#fff;border:1px solid #e5e7eb;box-shadow:none}
  html.embedded h1{-webkit-text-fill-color:initial;background:none;color:#111}
  html.embedded .box{background:#f8fafc;color:#111}
  html.embedded .table tbody tr:nth-child(even){background:#f3f4f6;color:#111}
  @media print{@page{margin:4mm}.no-print{display:none!important}}
  /* –ú—ñ–∫—Ä–æ-¬´—à—Ç—Ä–∏—Ö–∫–æ–¥¬ª (ASCII-–ø—Å–µ–≤–¥–æ–≥—Ä–∞—Ñ—ñ–∫–∞) –¥–ª—è –Ω–∞–æ—á–Ω–æ—Å—Ç—ñ –±–µ–∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫ */
  .bars{font:12px/10px ui-monospace,monospace;letter-spacing:1px;white-space:pre;background:#fff;color:#000;padding:6px;border-radius:6px;border:1px solid #e5e7eb;display:inline-block}
</style>
</head>
<body>
<div class="wrap">
  <span class="badge">–ü–∞—Ä–∞ 4 ¬∑ –∞—É–¥–∏—Ç–æ—Ä–Ω–æ ¬∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏ –ø–µ—Ä–µ—Ä–æ–±–∫–∏</span>
  <h1>üè∑Ô∏è –ï—Ç–∏–∫–µ—Ç–∫–∞: —Å–∫–ª–∞–¥/–∞–ª–µ—Ä–≥–µ–Ω–∏, —Ö–∞—Ä—á–æ–≤–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å, EAN-13 (GTIN), QR, —á–µ–∫ 58 –º–º, NFC</h1>

  <div class="card">
    <h2>üéØ –ú–µ—Ç–∞ –ø–∞—Ä–∏</h2>
    <p>
      –ó–∞ –∑–∞–Ω—è—Ç—Ç—è —Å—Ç—É–¥–µ–Ω—Ç–∏: (1) —Å—Ñ–æ—Ä–º—É—é—Ç—å <b>—Å–∫–ª–∞–¥</b> –∑ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è–º <b>–∞–ª–µ—Ä–≥–µ–Ω—ñ–≤</b>, (2) –æ—Ñ–æ—Ä–º–ª—è—Ç—å <b>—Ö–∞—Ä—á–æ–≤—É —Ü—ñ–Ω–Ω—ñ—Å—Ç—å</b> –Ω–∞ 100 –≥,
      (3) –∑–≥–µ–Ω–µ—Ä—É—é—Ç—å <b>GTIN (EAN-13)</b> –∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∏–º —Ä–æ–∑—Ä—è–¥–æ–º, (4) –ø—ñ–¥–≥–æ—Ç—É—é—Ç—å <b>QR-–¥–∞–Ω—ñ –ø–∞—Ä—Ç—ñ—ó</b>,
      (5) —Å—Ç–≤–æ—Ä—è—Ç—å <b>–∫–≤–∏—Ç–æ–∫ 58 –º–º</b>, <b>NFC</b> —Ç–∞ <b>CSV-–∂—É—Ä–Ω–∞–ª</b>.
    </p>
    <p class="small muted">–ü–∞–º‚Äô—è—Ç–∞–π—Ç–µ: –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ —Ç–∞ –ø—Ä–∞–≤–∏–ª–∞ –º–∞—Ä–∫—É–≤–∞–Ω–Ω—è —Ä–µ–≥—É–ª—é—é—Ç—å—Å—è –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º –£–∫—Ä–∞—ó–Ω–∏ —Ç–∞/–∞–±–æ –Ñ–°. –¶–µ –Ω–∞–≤—á–∞–ª—å–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.</p>
  </div>

  <!-- 1. –û–°–ù–û–í–ù–Ü –î–ê–ù–Ü –ï–¢–ò–ö–ï–¢–ö–ò -->
  <div class="card">
    <h2>üßæ –û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ –µ—Ç–∏–∫–µ—Ç–∫–∏</h2>
    <div class="grid g3">
      <div class="box">
        <h3>–ü—Ä–æ–¥—É–∫—Ç</h3>
        <div class="row">
          <div style="flex:1"><label>–ù–∞–∑–≤–∞ –≤–∏—Ä–æ–±—É</label><input id="prodName" type="text" value="–ö–æ–≤–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞ ‚Äú–ö–ª–∞—Å–∏—á–Ω–∞‚Äù"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–¢–æ—Ä–≥–æ–≤–∞ –º–∞—Ä–∫–∞</label><input id="brand" type="text" value="AgroTech Foods"></div>
          <div style="flex:1"><label>–ú–∞—Å–∞ –Ω–µ—Ç—Ç–æ, –≥</label><input id="netto" type="number" step="1" value="500"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–î–∞—Ç–∞ –≤–∏—Ä–æ–±–Ω.</label><input id="prodDate" type="date"></div>
          <div style="flex:1"><label>‚Äú–í–∂–∏—Ç–∏ –¥–æ‚Äù</label><input id="expDate" type="date"></div>
        </div>
      </div>

      <div class="box">
        <h3>–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è</h3>
        <div class="row">
          <div style="flex:1"><label>GTIN-12 (–±–µ–∑ —á/—Ü)</label><input id="gtin12" type="text" value="482000123456"></div>
          <div style="flex:1"><label>–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π EAN-13</label><input id="ean13" type="text" readonly placeholder="‚Äî"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–õ–û–¢ (–ø–∞—Ä—Ç—ñ—è)</label><input id="lot" type="text" value="25041-L1-A-1030"></div>
          <div style="flex:1"><label>URL –ø—Ä–æ–¥—É–∫—Ç—É</label><input id="url" type="text" value="https://example.com/p/klassic"></div>
        </div>
      </div>

      <div class="box">
        <h3>–ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è / –í–∏—Ä–æ–±–Ω–∏–∫</h3>
        <div class="row">
          <div style="flex:1"><label>–£–º–æ–≤–∏ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è</label><input id="storage" type="text" value="–ó–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø—Ä–∏ 0‚Ä¶+6¬∞C"></div>
          <div style="flex:1"><label>–ö—Ä–∞—ó–Ω–∞/–≤–∏—Ä–æ–±–Ω–∏–∫</label><input id="maker" type="text" value="–í–∏—Ä–æ–±–Ω–∏–∫: –¢–û–í ‚Äú–ê–≥—Ä–æ–¢–µ—Ö‚Äù, –£–∫—Ä–∞—ó–Ω–∞"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <button class="btn" onclick="autoDates()">üïí –ê–≤—Ç–æ–¥–∞—Ç–∞</button>
          <button class="btn" onclick="genEAN()">üî¢ –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ EAN-13</button>
          <button class="btn" onclick="copyCSV('csvCore')">üìã CSV (core)</button>
        </div>
        <div id="csvCore" class="out" style="margin-top:8px">‚Äî</div>
      </div>
    </div>
  </div>

  <!-- 2. –°–ö–õ–ê–î –¢–ê –ê–õ–ï–†–ì–ï–ù–ò -->
  <div class="card">
    <h2>ü•ó –°–∫–ª–∞–¥ —Ç–∞ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∞–ª–µ—Ä–≥–µ–Ω—ñ–≤</h2>
    <div class="row">
      <button class="btn" onclick="addIngred()">‚ûï –î–æ–¥–∞—Ç–∏ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç</button>
      <button class="btn" onclick="presetIngred()">üß™ –ü—Ä–∏–∫–ª–∞–¥</button>
      <button class="btn" onclick="copyCSV('csvIngred')">üìã CSV (ingredients)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblIngred">
        <thead>
          <tr>
            <th>#</th>
            <th>–ù–∞–∑–≤–∞</th>
            <th>% (–∑–∞ —Ä–µ—Ü–µ–ø—Ç—É—Ä–æ—é)</th>
            <th>–ê–õ–ï–†–ì–ï–ù?</th>
            <th>–ü—Ä–∏–º—ñ—Ç–∫–∞</th>
            <th>√ó</th>
          </tr>
        </thead>
        <tbody id="bodyIngred"></tbody>
      </table>
    </div>
    <div class="box" style="margin-top:8px">
      <h3>–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π —Ä—è–¥–æ–∫ ‚Äú–°–∫–ª–∞–¥‚Äù</h3>
      <div id="composition" class="out">‚Äî</div>
      <p class="small muted">–ü—Ä–∏–º—ñ—Ç–∫–∞: –∞–ª–µ—Ä–≥–µ–Ω–∏ –≤–∏–¥—ñ–ª—è—é—Ç—å—Å—è –í–ï–õ–ò–ö–ò–ú–ò –õ–Ü–¢–ï–†–ê–ú–ò.</p>
    </div>
    <div id="csvIngred" class="out" style="margin-top:8px">‚Äî</div>
  </div>

  <!-- 3. –•–ê–†–ß–û–í–ê –¶–Ü–ù–ù–Ü–°–¢–¨ –ù–ê 100 –≥ -->
  <div class="card">
    <h2>üçΩÔ∏è –•–∞—Ä—á–æ–≤–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å (–Ω–∞ 100 –≥)</h2>
    <div class="grid g3">
      <div class="box">
        <h3>–ü–æ–∫–∞–∑–Ω–∏–∫–∏</h3>
        <div class="row">
          <div style="flex:1"><label>–ï–Ω–µ—Ä–≥—ñ—è, –∫–∫–∞–ª</label><input id="kcal" type="number" step="1" value="260"></div>
          <div style="flex:1"><label>–ë—ñ–ª–∫–∏, –≥</label><input id="prot" type="number" step="0.1" value="15.0"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–ñ–∏—Ä–∏, –≥</label><input id="fat" type="number" step="0.1" value="20.0"></div>
          <div style="flex:1"><label>–í—É–≥–ª–µ–≤–æ–¥–∏, –≥</label><input id="carb" type="number" step="0.1" value="1.5"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–°—ñ–ª—å, –≥</label><input id="salt100" type="number" step="0.01" value="2.0"></div>
          <div style="flex:1"><label>–ù–∞—Ç—Ä—ñ–π, –º–≥ (–æ–ø—Ü.)</label><input id="na_mg" type="number" step="1" value="‚Äî"></div>
        </div>
      </div>
      <div class="box">
        <h3>–†—è–¥–æ–∫ –¥–ª—è –µ—Ç–∏–∫–µ—Ç–∫–∏</h3>
        <div id="nutriLine" class="out">‚Äî</div>
      </div>
      <div class="box">
        <h3>–ö–µ—Ä—É–≤–∞–Ω–Ω—è</h3>
        <div class="row">
          <button class="btn" onclick="buildNutri()">üîÅ –ó—ñ–±—Ä–∞—Ç–∏</button>
          <button class="btn" onclick="copyCSV('csvNutri')">üìã CSV (nutrition)</button>
        </div>
        <div id="csvNutri" class="out" style="margin-top:8px">‚Äî</div>
      </div>
    </div>
  </div>

  <!-- 4. –®–¢–†–ò–•–ö–û–î EAN-13 + QR –î–ê–ù–Ü -->
  <div class="card">
    <h2>üî≥ EAN-13 —Ç–∞ QR-–¥–∞–Ω—ñ</h2>
    <div class="grid g2">
      <div class="box">
        <h3>–ü—Å–µ–≤–¥–æ-—à—Ç—Ä–∏—Ö–∫–æ–¥ (ASCII) —Ç–∞ –Ω–æ–º–µ—Ä</h3>
        <div class="row">
          <button class="btn" onclick="genEAN()">üî¢ –ü–µ—Ä–µ—Ä–∞—Ö—É–≤–∞—Ç–∏ EAN-13</button>
          <button class="btn" onclick="randomGTIN()">üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∏–π GTIN-12 (482‚Ä¶)</button>
          <button class="btn" onclick="copyEl('eanOut')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏ EAN</button>
        </div>
        <div id="eanOut" class="out" style="margin-top:8px">‚Äî</div>
        <div id="asciiBars" class="bars" style="margin-top:8px">[—à—Ç—Ä–∏—Ö–∫–æ–¥]</div>
      </div>
      <div class="box">
        <h3>QR-–¥–∞–Ω—ñ –ø–∞—Ä—Ç—ñ—ó (payload)</h3>
        <div class="row">
          <button class="btn" onclick="buildQR()">üß© –ó—ñ–±—Ä–∞—Ç–∏ QR-payload</button>
          <button class="btn" onclick="copyEl('qrOut')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏</button>
        </div>
        <div id="qrOut" class="out" style="margin-top:8px">‚Äî</div>
        <p class="small muted">QR –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è —Ç—É—Ç, —Ü–µ –≤–º—ñ—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è QR —É –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Å–∏—Å—Ç–µ–º–∞—Ö.</p>
      </div>
    </div>
  </div>

  <!-- 5. –ñ–£–†–ù–ê–õ –ï–¢–ò–ö–ï–¢–û–ö -->
  <div class="card">
    <h2>üìí –ñ—É—Ä–Ω–∞–ª –µ—Ç–∏–∫–µ—Ç–æ–∫</h2>
    <div class="row">
      <button class="btn" onclick="addRow()">‚ûï –î–æ–¥–∞—Ç–∏ —Ä—è–¥–æ–∫</button>
      <button class="btn" onclick="presetRows()">üß™ –ü—Ä–∏–∫–ª–∞–¥</button>
      <button class="btn" onclick="copyCSV('csvLog')">üìã CSV (journal)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblLog">
        <thead>
          <tr>
            <th>#</th>
            <th>–í–∏—Ä—ñ–±</th>
            <th class="dark">EAN-13</th>
            <th class="dark">–õ–û–¢</th>
            <th class="dark">–í–∂–∏—Ç–∏ –¥–æ</th>
            <th>–ê–ª–µ—Ä–≥–µ–Ω–∏</th>
            <th>–ö–æ—Ä–æ—Ç–∫–∏–π ‚Äú–°–∫–ª–∞–¥‚Äù</th>
            <th>–ü—Ä–∏–º—ñ—Ç–∫–∞</th>
          </tr>
        </thead>
        <tbody id="bodyLog"></tbody>
      </table>
    </div>
    <div id="csvLog" class="out" style="margin-top:8px">‚Äî</div>
  </div>

  <!-- 6. –ö–í–ò–¢–û–ö 58 –º–º + NFC -->
  <div class="card">
    <h2>üßæ –ö–≤–∏—Ç–æ–∫ 58 –º–º —Ç–∞ NFC</h2>
    <div class="grid g2">
      <div class="box">
        <h3>NFC ‚Äî ‚ÄúFOOD LABEL CARD‚Äù</h3>
        <div class="row">
          <div style="flex:1"><label>–ö–æ–Ω—Ç–∞–∫—Ç/—Ç–µ—Ö–Ω.</label><input id="nfcPhone" type="text" value="+380XXXXXXXXX"></div>
          <div style="flex:1"><label>–ü–∞—Ä—Ç—ñ—è, –∫–≥</label><input id="batchKg" type="number" step="0.1" value="300"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <button class="btn" onclick="buildNFC()">üß© –ó—ñ–±—Ä–∞—Ç–∏</button>
          <button class="btn" onclick="copyEl('nfcOut')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏</button>
        </div>
        <div id="nfcOut" class="out">‚Äî</div>
      </div>

      <div class="box">
        <h3>–ö–≤–∏—Ç–æ–∫ –¥–ª—è –ø—Ä–∏–Ω—Ç–µ—Ä–∞ 58 –º–º</h3>
        <div class="row">
          <button class="btn" onclick="buildTicket()">üßæ –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏</button>
          <button class="btn" onclick="window.print()">üñ®Ô∏è –î—Ä—É–∫</button>
        </div>
        <div class="ticket" id="ticket" style="margin-top:8px">
          <h4>PRODUCT LABEL TICKET</h4>
          <p><b>–í–∏—Ä—ñ–±:</b> <span id="tProd">‚Äî</span></p>
          <p><b>EAN-13:</b> <span id="tEAN">‚Äî</span></p>
          <div class="line"></div>
          <p><b>–ù–µ—Ç—Ç–æ:</b> <span id="tNet">‚Äî</span> –≥</p>
          <p><b>–õ–û–¢:</b> <span id="tLot">‚Äî</span></p>
          <p><b>–í–∏—Ä–æ–±–Ω.:</b> <span id="tProdD">‚Äî</span></p>
          <p><b>–í–∂–∏—Ç–∏ –¥–æ:</b> <span id="tExpD">‚Äî</span></p>
          <div class="line"></div>
          <p><b>–°–∫–ª–∞–¥:</b> <span id="tComp">‚Äî</span></p>
          <p><b>–•–∞—Ä—á. —Ü—ñ–Ω–Ω—ñ—Å—Ç—å/100–≥:</b> <span id="tNutri">‚Äî</span></p>
          <div class="line"></div>
          <p><small id="tMaker">‚Äî</small></p>
        </div>
      </div>
    </div>
  </div>

  <!-- 7. –•–Ü–î –†–û–ë–û–¢–ò + –û–¶–Ü–ù–Æ–í–ê–ù–ù–Ø -->
  <div class="card">
    <h2>ü™ú –•—ñ–¥ —Ä–æ–±–æ—Ç–∏ (45‚Äì70 —Ö–≤)</h2>
    <ol>
      <li>–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –æ—Å–Ω–æ–≤–Ω—ñ –ø–æ–ª—è (–Ω–∞–∑–≤–∞, –¥–∞—Ç–∏, GTIN-12, –ª–æ—Ç, —É–º–æ–≤–∏).</li>
      <li>–î–æ–¥–∞–π—Ç–µ 6‚Äì10 —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤, –ø–æ–∑–Ω–∞—á—Ç–µ –∞–ª–µ—Ä–≥–µ–Ω–∏ ‚Äî –∑–≥–µ–Ω–µ—Ä—É–π—Ç–µ —Ä—è–¥–æ–∫ ‚Äú–°–∫–ª–∞–¥‚Äù.</li>
      <li>–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ö–∞—Ä—á–æ–≤—É —Ü—ñ–Ω–Ω—ñ—Å—Ç—å ‚Äî —Å—Ñ–æ—Ä–º—É–π—Ç–µ —Ä—è–¥–æ–∫ –¥–ª—è –µ—Ç–∏–∫–µ—Ç–∫–∏.</li>
      <li>–ó–≥–µ–Ω–µ—Ä—É–π—Ç–µ <b>EAN-13</b> —ñ <b>QR-payload</b>, –≤–Ω–µ—Å—ñ—Ç—å —É <b>–∂—É—Ä–Ω–∞–ª</b>, –ø—ñ–¥–≥–æ—Ç—É–π—Ç–µ <b>NFC</b> —ñ <b>–∫–≤–∏—Ç–æ–∫</b>, –∑–±–µ—Ä–µ–∂—ñ—Ç—å <b>CSV</b>.</li>
    </ol>
  </div>

  <div class="card">
    <h2>‚úÖ –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è (10 –±–∞–ª—ñ–≤)</h2>
    <table class="table">
      <thead><tr><th>–ö—Ä–∏—Ç–µ—Ä—ñ–π</th><th>–ë–∞–ª–∏</th></tr></thead>
      <tbody>
        <tr><td>–ö–æ—Ä–µ–∫—Ç–Ω–∏–π —Å–∫–ª–∞–¥ –∑ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è–º –∞–ª–µ—Ä–≥–µ–Ω—ñ–≤</td><td>3</td></tr>
        <tr><td>–•–∞—Ä—á–æ–≤–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞</td><td>3</td></tr>
        <tr><td>EAN-13 / QR-–¥–∞–Ω—ñ / –∂—É—Ä–Ω–∞–ª + CSV</td><td>3</td></tr>
        <tr><td>–ö–≤–∏—Ç–æ–∫/NFC —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω—ñ</td><td>1</td></tr>
      </tbody>
    </table>
  </div>
</div>

<script>
  // –í–±—É–¥–æ–≤–∞–Ω–∏–π —Ä–µ–∂–∏–º (Moodle iFrame)
  (function(){ if (window.self !== window.top) document.documentElement.classList.add('embedded'); })();

  const byId = id => document.getElementById(id);
  const bodyIngred = byId('bodyIngred');
  const bodyLog = byId('bodyLog');
  const rnd = (n,d=2)=>Number((+n).toFixed(d));
  const pad = (n,w=2)=>String(n).padStart(w,'0');

  // ===== 0) –ë–∞–∑–æ–≤—ñ —É—Ç–∏–ª—ñ—Ç–∏ / CSV / –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è =====
  function copyCSV(id){
    const t = document.getElementById(id).textContent.trim();
    if(!t||t==='‚Äî'){ alert('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è'); return; }
    navigator.clipboard.writeText(t).then(()=>flash('‚úÖ CSV —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'),()=>flash('–ù–µ –≤–¥–∞–ª–æ—Å—è'));
  }
  function copyEl(id){
    const t = byId(id).textContent.trim();
    if(!t||t==='‚Äî'){ alert('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö'); return; }
    navigator.clipboard.writeText(t).then(()=>flash('‚úÖ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'),()=>flash('–ù–µ –≤–¥–∞–ª–æ—Å—è'));
  }
  function flash(msg){ const o=document.title; document.title=msg; setTimeout(()=>document.title=o,900); }

  // ===== 1) –û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ: –¥–∞—Ç–∏ / EAN =====
  function autoDates(){
    const now = new Date();
    byId('prodDate').value = now.toISOString().slice(0,10);
    const exp = new Date(now); exp.setDate(exp.getDate()+14);
    byId('expDate').value = exp.toISOString().slice(0,10);
    buildCoreCSV();
  }
  function luhnEAN13CheckDigit(d12){
    // EAN-13: —Å—É–º–∞ –Ω–µ–ø–∞—Ä–Ω–∏—Ö + 3*—Å—É–º–∞ –ø–∞—Ä–Ω–∏—Ö (–ø–æ–∑–∏—Ü—ñ—ó –∑–ª—ñ–≤–∞ 1..12), cd = (10 - sum%10)%10
    const digits = d12.replace(/\D/g,'').slice(0,12).split('').map(Number);
    if(digits.length<12) return null;
    let sum=0;
    for(let i=0;i<12;i++){
      const pos=i+1;
      sum += (pos%2===0)? digits[i]*3 : digits[i];
    }
    return (10 - (sum%10))%10;
  }
  function genEAN(){
    const base = byId('gtin12').value.replace(/\D/g,'').slice(0,12);
    if(base.length<12){ alert('–í–≤–µ–¥—ñ—Ç—å 12 —Ü–∏—Ñ—Ä GTIN-12'); return; }
    const cd = luhnEAN13CheckDigit(base);
    const ean = base + String(cd);
    byId('ean13').value = ean;
    byId('eanOut').textContent = `EAN13:${ean}`;
    drawAsciiBars(ean);
    buildCoreCSV();
    return ean;
  }
  function randomGTIN(){
    // –£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –ø—Ä–µ—Ñ—ñ–∫—Å GS1 —á–∞—Å—Ç—ñ—à–µ 482 ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ —è–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π
    let base = '482' + String(Math.floor(Math.random()*1e9)).padStart(9,'0'); // 12 —Ü–∏—Ñ—Ä
    byId('gtin12').value = base;
    genEAN();
  }
  function drawAsciiBars(ean){
    // –î—É–∂–µ —Å–ø—Ä–æ—â–µ–Ω–µ "–±–∞—Ä-–≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è" ‚Äî –¥–ª—è –Ω–∞–≤—á–∞–ª—å–Ω–æ—ó –Ω–∞–æ—á–Ω–æ—Å—Ç—ñ (–Ω–µ –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è)
    if(!ean || ean.length!==13){ byId('asciiBars').textContent='[—à—Ç—Ä–∏—Ö–∫–æ–¥]'; return; }
    const map = {'0':'||','1':'| ','2':' |','3':'|| ','4':' | ','5':'  |','6':'|||','7':'| |','8':' ||','9':'  | '};
    let s='| | '; // —Å—Ç–∞—Ä—Ç
    for(const ch of ean) s += (map[ch]||' |')+' ';
    s += '| |'; // —Å—Ç–æ–ø
    byId('asciiBars').textContent = s + '\n' + ean;
  }
  function buildCoreCSV(){
    const csv = `CORE|prod=${byId('prodName').value}|brand=${byId('brand').value}|net=${byId('netto').value}g|prod=${byId('prodDate').value}|exp=${byId('expDate').value}|lot=${byId('lot').value}|ean13=${byId('ean13').value||'NA'}|url=${byId('url').value}|storage=${byId('storage').value}|maker=${byId('maker').value}`;
    byId('csvCore').textContent = csv;
  }

  // ===== 2) –°–ö–õ–ê–î —ñ –∞–ª–µ—Ä–≥–µ–Ω–∏ =====
  function reindex(tbody){ [...tbody.querySelectorAll('tr')].forEach((tr,i)=>tr.querySelector('.idx').textContent=i+1); }
  function addIngred(sample){
    const s = Object.assign({name:'', pct:'', allergen:false, note:''}, sample||{});
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td class="idx">1</td>
      <td><input type="text" value="${s.name}"></td>
      <td><input type="number" step="0.1" value="${s.pct}"></td>
      <td><select>${['–Ω—ñ','—Ç–∞–∫'].map(v=>`<option ${ (s.allergen && v==='—Ç–∞–∫')?'selected':'' }>${v}</option>`).join('')}</select></td>
      <td><input type="text" value="${s.note}"></td>
      <td><button class="btn" onclick="this.closest('tr').remove(); reindex(bodyIngred); buildComposition();">‚úñ</button></td>
    `;
    bodyIngred.appendChild(tr); reindex(bodyIngred); buildComposition();
  }
  function presetIngred(){
    bodyIngred.innerHTML='';
    addIngred({name:'–°–≤–∏–Ω–∏–Ω–∞', pct:60, allergen:false});
    addIngred({name:'–Ø–ª–æ–≤–∏—á–∏–Ω–∞', pct:15, allergen:false});
    addIngred({name:'–í–æ–¥–∞', pct:18, allergen:false});
    addIngred({name:'–ë—ñ–ª–∫–æ–≤–∏–π —ñ–∑–æ–ª—è—Ç –°–û–Ñ–í–ò–ô', pct:3, allergen:true});
    addIngred({name:'–ú–û–õ–û–ß–ù–ò–ô –±—ñ–ª–æ–∫', pct:2, allergen:true});
    addIngred({name:'–°—ñ–ª—å –∫—É—Ö–æ–Ω–Ω–∞', pct:1.5, allergen:false});
    addIngred({name:'–°—É–º—ñ—à –ø—Ä—è–Ω–æ—â—ñ–≤', pct:0.5, allergen:false});
  }
  function buildComposition(){
    const rows = [...bodyIngred.querySelectorAll('tr')].map(r=>{
      const name=r.children[1].querySelector('input').value.trim();
      const pct=r.children[2].querySelector('input').value.trim();
      const all=r.children[3].querySelector('select').value==='—Ç–∞–∫';
      return {name,pct: pct? Number(pct): null, all};
    }).filter(x=>x.name);
    // —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ % (—Å–ø–∞–¥–∞–Ω–Ω—è) —è–∫—â–æ –∑–∞–¥–∞–Ω–æ
    rows.sort((a,b)=> (b.pct??0)-(a.pct??0));
    const list = rows.map(x=>{
      const nm = x.all ? x.name.toUpperCase() : x.name;
      return x.pct!=null ? `${nm} (${x.pct}%)` : nm;
    });
    const text = list.length ? `–°–∫–ª–∞–¥: ${list.join(', ')}.` : '‚Äî';
    byId('composition').textContent = text;

    // CSV
    const csv = rows.map((x,i)=> [i+1,x.name,x.pct??'',x.all?'ALLERGEN':''].join(' | ')).join('\n') || '‚Äî';
    byId('csvIngred').textContent = csv;
    return {rows,text, allergens: rows.filter(x=>x.all).map(x=>x.name.toUpperCase())};
  }

  // ===== 3) –•–∞—Ä—á–æ–≤–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å =====
  function buildNutri(){
    const kcal = +byId('kcal').value||0;
    const prot = +byId('prot').value||0;
    const fat  = +byId('fat').value ||0;
    const carb = +byId('carb').value||0;
    const salt = +byId('salt100').value||0;
    const na   = byId('na_mg').value;
    const line = `–ï–Ω–µ—Ä–≥–µ—Ç–∏—á–Ω–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å ${kcal} –∫–∫–∞–ª; –ë—ñ–ª–∫–∏ ${prot} –≥; –ñ–∏—Ä–∏ ${fat} –≥; –í—É–≥–ª–µ–≤–æ–¥–∏ ${carb} –≥; –°—ñ–ª—å ${salt} –≥${na!=='‚Äî'&&na!==''?`; –ù–∞—Ç—Ä—ñ–π ${na} –º–≥`:''} ‚Äî –Ω–∞ 100 –≥ –ø—Ä–æ–¥—É–∫—Ç—É.`;
    byId('nutriLine').textContent = line;
    byId('csvNutri').textContent = `NUTRITION|${line}`;
    return line;
  }

  // ===== 4) QR-payload =====
  function buildQR(){
    const ean = byId('ean13').value || genEAN();
    const payload = {
      prod: byId('prodName').value,
      brand: byId('brand').value,
      gtin: ean,
      lot: byId('lot').value,
      prod_date: byId('prodDate').value,
      exp_date: byId('expDate').value,
      url: byId('url').value
    };
    const text = JSON.stringify(payload);
    byId('qrOut').textContent = text;
    return text;
  }

  // ===== 5) –ñ—É—Ä–Ω–∞–ª =====
  function addRow(sample){
    const ean = byId('ean13').value || genEAN();
    const comp = buildComposition();
    const line = buildNutri();
    const def = {
      prod: byId('prodName').value,
      ean, lot: byId('lot').value, exp: byId('expDate').value,
      allergens: comp.allergens.join(', ') || '‚Äî',
      compShort: (comp.text.length>80? comp.text.slice(0,77)+'‚Ä¶' : comp.text),
      note:''
    };
    const s = Object.assign({}, def, sample||{});
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td class="idx">1</td>
      <td><input type="text" value="${s.prod}"></td>
      <td class="dark">${s.ean}</td>
      <td class="dark">${s.lot}</td>
      <td class="dark">${s.exp}</td>
      <td>${s.allergens}</td>
      <td>${s.compShort}</td>
      <td><input type="text" value="${s.note}"></td>
    `;
    bodyLog.appendChild(tr); reindex(bodyLog); buildCSVlog();
  }
  function presetRows(){
    bodyLog.innerHTML='';
    presetIngred(); genEAN(); buildNutri();
    addRow({note:'–º–∞–∫–µ—Ç v1'});
    // –¥—Ä—É–≥–∞ –ø–æ–∑–∏—Ü—ñ—è, —ñ–Ω—à–∏–π GTIN
    randomGTIN(); buildNutri();
    addRow({prod:'–°–æ—Å–∏—Å–∫–∏ –º–æ–ª–æ—á–Ω—ñ', note:'–∞–ª–µ—Ä–≥–µ–Ω–∏: –ú–û–õ–û–ö–û'});
    buildCSVlog();
  }
  function buildCSVlog(){
    const rows = [...bodyLog.querySelectorAll('tr')].map(r=>{
      const idx=r.querySelector('.idx').textContent.trim();
      const prod=r.children[1].querySelector('input').value.trim();
      const ean=r.children[2].textContent.trim();
      const lot=r.children[3].textContent.trim();
      const exp=r.children[4].textContent.trim();
      const alg=r.children[5].textContent.trim();
      const comp=r.children[6].textContent.trim();
      const note=r.children[7].querySelector('input').value.trim();
      return [idx,prod,ean,lot,exp,alg,comp,note].join(' | ');
    });
    byId('csvLog').textContent = rows.join('\n') || '‚Äî';
  }

  // ===== 6) –ö–≤–∏—Ç–æ–∫ / NFC =====
  function buildTicket(){
    const ean = byId('ean13').value || genEAN();
    const comp = buildComposition();
    const nutri = buildNutri();
    byId('tProd').textContent = byId('prodName').value;
    byId('tEAN').textContent  = ean;
    byId('tNet').textContent  = byId('netto').value;
    byId('tLot').textContent  = byId('lot').value;
    byId('tProdD').textContent= byId('prodDate').value || '‚Äî';
    byId('tExpD').textContent = byId('expDate').value || '‚Äî';
    byId('tComp').textContent = comp.text;
    byId('tNutri').textContent= nutri;
    byId('tMaker').textContent= `${byId('storage').value}. ${byId('maker').value}`;
  }
  function buildNFC(){
    const ean = byId('ean13').value || genEAN();
    const txt = [
      `FOOD_LABEL_NFC`,
      `PROD:${byId('prodName').value} (${byId('brand').value})`,
      `EAN13:${ean} LOT:${byId('lot').value}`,
      `NET:${byId('netto').value}g PROD:${byId('prodDate').value} EXP:${byId('expDate').value}`,
      `URL:${byId('url').value}`,
      `BATCH:${byId('batchKg').value||'‚Äî'}kg`,
      `CONTACT:${byId('nfcPhone').value}`,
      `STAMP:${new Date().toISOString().slice(0,19).replace('T',' ')}`
    ].join('\n');
    byId('nfcOut').textContent = txt;
  }

  // ===== –°–ª—É—Ö–∞—á—ñ –∑–º—ñ–Ω / —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è =====
  (function init(){
    const now = new Date();
    byId('prodDate').value = byId('prodDate').value || now.toISOString().slice(0,10);
    const exp = new Date(now); exp.setDate(exp.getDate()+14);
    byId('expDate').value = byId('expDate').value || exp.toISOString().slice(0,10);
    genEAN(); buildComposition(); buildNutri(); buildCoreCSV();

    document.addEventListener('change', e=>{
      if(e.target.matches('input,select,textarea')) {
        buildComposition(); buildNutri(); buildCoreCSV();
      }
    });
  })();
</script>
</body>
</html>
