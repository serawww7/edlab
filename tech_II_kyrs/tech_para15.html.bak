<!-- tech_para15.html
     –ü–ê–†–ê 15 (–∞—É–¥–∏—Ç–æ—Ä–Ω–æ, –ø—ñ–¥—Å—É–º–∫–æ–≤–∞) –¥–ª—è —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–≤ –∑ –ø–µ—Ä–µ—Ä–æ–±–∫–∏ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó —Ç–≤–∞—Ä–∏–Ω–Ω–∏—Ü—Ç–≤–∞
     –¢–µ–º–∞: –ü–Ü–î–°–£–ú–ö–û–í–ò–ô –ü–†–û–Ñ–ö–¢ ‚Äî –º—ñ–Ω—ñ-HACCP/FSMS: –ø—Ä–æ–¥—É–∫—Ç‚Üí–º–∞—Ä—à—Ä—É—Ç –ø—Ä–æ—Ü–µ—Å—É, –Ω–µ–±–µ–∑–ø–µ–∫–∏/—Ä–∏–∑–∏–∫–∏,
           —Ä—ñ—à–µ–Ω–Ω—è —â–æ–¥–æ CCP, –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –∞—É–¥–∏—Ç (—á–µ–∫-–ª–∏—Å—Ç) –∑ —Ä–µ–π—Ç–∏–Ω–≥–æ–º, –ø–ª–∞–Ω CAPA,
           –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ-–µ–∫—Å–ø–æ—Ä—Ç (CSV/QR/NFC), –∫–≤–∏—Ç–æ–∫ 58 –º–º.

     –§–æ–∫—É—Å: —Ç–µ–ª–µ—Ñ–æ–Ω–∏/–ü–ö; –±–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫; –≥–æ—Ç–æ–≤–æ –¥–ª—è GitHub Pages —Ç–∞ Moodle (iframe).
     –û–±–ª–∞–¥–Ω–∞–Ω–Ω—è: —Ç–µ–ª–µ—Ñ–æ–Ω–∏; (–æ–ø—Ü.) —Ç–µ—Ä–º–æ–ø—Ä–∏–Ω—Ç–µ—Ä 58 –º–º; NFC-–º—ñ—Ç–∫–∏.

     –ü—Ä–∏–º—ñ—Ç–∫–∞ –∫–æ–Ω—Ç—Ä–∞—Å—Ç—É: —Ç–µ–º–Ω—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—å –º–∞—é—Ç—å —Å–≤—ñ—Ç–ª–∏–π —Ç–µ–∫—Å—Ç (.dark).
     –£–í–ê–ì–ê: –Ω–∞–≤—á–∞–ª—å–Ω–∞ —Å–∏–º—É–ª—è—Ü—ñ—è. –†–µ–∞–ª—å–Ω—ñ HACCP/FSMS-–¥–æ–∫—É–º–µ–Ω—Ç–∏ –≥–æ—Ç—É—é—Ç—å—Å—è –∑–∞ –°–û–ü –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞.
-->
<!DOCTYPE html>
<html lang="uk">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>–ü–∞—Ä–∞ 15 (—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏) ‚Äî –ü—ñ–¥—Å—É–º–∫–æ–≤–∏–π –ø—Ä–æ—î–∫—Ç: HACCP/FSMS, –∞—É–¥–∏—Ç, CAPA, –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ</title>
<meta name="color-scheme" content="light dark">
<style>
  :root{
    --bg:#0b1220; --card:#0f172a; --muted:#94a3b8; --text:#e2e8f0;
    --accent:#22c55e; --accent-2:#60a5fa; --warn:#f59e0b; --bad:#ef4444; --good:#10b981; --line:#1f2937;
    --darkcell:#0b1324; --darkink:#e6eef9; --darkink2:#e5e7eb;
  }
  *{box-sizing:border-box}
  body{margin:0;background:linear-gradient(180deg,#0b1220,#111827 30%,#0b1220);color:var(--text);
       font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,"Helvetica Neue",Arial,sans-serif;line-height:1.55}
  .wrap{max-width:1100px;margin:0 auto;padding:24px 16px 64px}
  .badge{display:inline-block;padding:6px 10px;border:1px solid var(--line);background:#0b1220;border-radius:999px;
         font-size:12px;color:var(--muted);letter-spacing:.3px}
  h1{font-size:34px;margin:6px 0 12px;line-height:1.15;
     background:linear-gradient(90deg,#60a5fa,#22c55e);-webkit-background-clip:text;-webkit-text-fill-color:transparent}
  h2{font-size:22px;margin:28px 0 12px} h3{font-size:18px;margin:20px 0 8px;color:#cbd5e1}
  p{margin:10px 0}.small{font-size:12px;color:#9fb0c8}.muted{color:#93a3b5}.mono{font-family:ui-monospace,SFMono-Regular,Menlo,Consolas,Monaco,"Courier New",monospace}
  .btn{display:inline-block;padding:10px 14px;border-radius:10px;border:1px solid #223049;background:#0d1a2e;color:#dbeafe;text-decoration:none;cursor:pointer}
  .btn:hover{background:#0f1f39}
  .grid{display:grid;gap:12px}.g2{grid-template-columns:repeat(2,minmax(0,1fr))}.g3{grid-template-columns:repeat(3,minmax(0,1fr))}
  @media (max-width:1000px){.g2,.g3{grid-template-columns:1fr}}
  .row{display:flex;gap:10px;flex-wrap:wrap}
  .card{background:linear-gradient(180deg,#0f172a,#0b1220);border:1px solid var(--line);border-radius:16px;padding:16px;margin:12px 0;box-shadow:0 6px 24px rgba(0,0,0,.25)}
  .box{border:1px solid #223049;border-radius:12px;padding:12px;background:var(--darkcell);color:var(--darkink)}
  .ok{color:var(--good)} .warn{color:var(--warn)} .bad{color:var(--bad)}
  .table{width:100%;border-collapse:separate;border-spacing:0;overflow:auto;border-radius:12px;border:1px solid #223049}
  .table th,.table td{padding:8px 10px;border-bottom:1px solid #1f2937;font-size:14px;vertical-align:top}
  .table thead th{background:#0c1629;color:#a5b4fc;text-align:left;position:sticky;top:0}
  .table tbody tr:nth-child(even){background:var(--darkcell);color:var(--darkink2)}
  .table td.dark,.table th.dark{background:var(--darkcell)!important;color:var(--darkink2)!important}
  .out{background:var(--darkcell);color:var(--darkink2);border:1px dashed #263042;padding:10px 12px;border-radius:10px;word-break:break-all}
  input[type="text"],input[type="number"],input[type="date"],input[type="time"],select,textarea{width:100%;padding:8px 10px;border-radius:10px;border:1px solid #223049;background:#0d1a2e;color:#e6eef9}
  textarea{min-height:84px}
  /* –ß–µ–∫ 58 –º–º */
  .ticket{width:58mm;background:#fff;color:#000;padding:6mm 4mm;border-radius:6px;box-shadow:0 0 0 1px #e5e7eb inset;font-family:"Courier New",ui-monospace,monospace}
  .ticket h4{margin:0 0 6px;font-size:13px;text-align:center}.ticket p{margin:2px 0;font-size:12px}.ticket .line{border-top:1px dashed #111;margin:6px 0}
  .ticket small{font-size:10px}
  /* –í–±—É–¥–æ–≤–∞–Ω–æ –≤ Moodle (iframe) ‚Üí —Å–≤—ñ—Ç–ª–∏–π –≤–∏–≥–ª—è–¥ */
  html.embedded body{background:#fff;color:#111}
  html.embedded .card{background:#fff;border:1px solid #e5e7eb;box-shadow:none}
  html.embedded h1{-webkit-text-fill-color:initial;background:none;color:#111}
  html.embedded .box{background:#f8fafc;color:#111}
  html.embedded .table tbody tr:nth-child(even){background:#f3f4f6;color:#111}
  @media print{@page{margin:4mm}.no-print{display:none!important}}
  .pill{display:inline-block;padding:2px 8px;border-radius:999px;border:1px solid #20314a;background:#0c182a;color:#e5edfb;font-size:12px}
</style>
</head>
<body>
<div class="wrap">
  <span class="badge">–ü–∞—Ä–∞ 15 ¬∑ –∞—É–¥–∏—Ç–æ—Ä–Ω–æ ¬∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏ –ø–µ—Ä–µ—Ä–æ–±–∫–∏</span>
  <h1>üèÅ –ü—ñ–¥—Å—É–º–∫–æ–≤–∏–π –ø—Ä–æ—î–∫—Ç: –º—ñ–Ω—ñ-HACCP/FSMS, –∞—É–¥–∏—Ç, CAPA, –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ</h1>

  <div class="card">
    <h2>üéØ –ó–∞–≤–¥–∞–Ω–Ω—è –ø–∞—Ä–∏</h2>
    <p>
      –°—Ñ–æ—Ä–º—É–π—Ç–µ <b>–º—ñ–Ω—ñ-HACCP</b> –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É: –æ–ø–∏—à—ñ—Ç—å –ø—Ä–æ—Ü–µ—Å, —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫—É–π—Ç–µ <b>–Ω–µ–±–µ–∑–ø–µ–∫–∏</b>,
      –æ—Ü—ñ–Ω—ñ—Ç—å <b>—Ä–∏–∑–∏–∫–∏</b>, –ø—Ä–∏–π–º—ñ—Ç—å —Ä—ñ—à–µ–Ω–Ω—è —â–æ–¥–æ <b>CCP</b>, –ø—Ä–æ–≤–µ–¥—ñ—Ç—å <b>–≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –∞—É–¥–∏—Ç</b> –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É,
      —Å–∫–ª–∞–¥—ñ—Ç—å <b>–ø–ª–∞–Ω CAPA</b>, –∑–±–µ—Ä—ñ—Ç—å <b>–ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ</b> (CSV/QR/NFC) —Ç–∞ –ø—ñ–¥—Å—É–º–∫–æ–≤–∏–π <b>–∫–≤–∏—Ç–æ–∫ 58 –º–º</b>.
    </p>
    <p class="small muted">–ù–∞–≤—á–∞–ª—å–Ω–∞ –º–æ–¥–µ–ª—å. –î–ª—è –≤–∏—Ä–æ–±–Ω–∏—á–æ–≥–æ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è ‚Äî —É–∑–≥–æ–¥–∏—Ç–∏ –∑ HACCP-–≥—Ä—É–ø–æ—é —Ç–∞ QA.</p>
  </div>

  <!-- 1. –ü–†–û–î–£–ö–¢ –Ü –ú–ê–†–®–†–£–¢ –ü–†–û–¶–ï–°–£ -->
  <div class="card">
    <h2>üß© –ü—Ä–æ–¥—É–∫—Ç —ñ –º–∞—Ä—à—Ä—É—Ç –ø—Ä–æ—Ü–µ—Å—É</h2>
    <div class="grid g3">
      <div class="box">
        <h3>–ü–∞—Å–ø–æ—Ä—Ç –ø—Ä–æ–¥—É–∫—Ç—É</h3>
        <div class="row">
          <div style="flex:1"><label>–ù–∞–∑–≤–∞ –ø—Ä–æ–¥—É–∫—Ç—É</label><input id="pName" type="text" value="–®–∏–Ω–∫–∞ –≤–∞—Ä–µ–Ω–∞ ¬´–î–æ–º–∞—à–Ω—è¬ª 400 –≥"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è</label><input id="pCat" type="text" value="–ú º—è—Å–æ–ø—Ä–æ–¥—É–∫—Ç–∏, –æ—Ö–æ–ª–æ–¥–∂–µ–Ω—ñ"></div>
          <div style="flex:1"><label>–¢–µ—Ä–º—ñ–Ω (—Ü—ñ–ª—å), –¥—ñ–±</label><input id="pShelf" type="number" step="1" value="20"></div>
        </div>
      </div>

      <div class="box">
        <h3>–ï—Ç–∞–ø–∏ –ø—Ä–æ—Ü–µ—Å—É</h3>
        <p class="small muted">–í–∫–∞–∂—ñ—Ç—å 5‚Äì10 –µ—Ç–∞–ø—ñ–≤ (—á–µ—Ä–µ–∑ ¬´;¬ª). –ù–∞–ø—Ä.: <span class="mono">–ü—Ä–∏–π–º–∞–Ω–Ω—è; –ó–∞—Å—ñ–ª; –¢—É–º–±–ª–µ—Ä; –¢–µ—Ä–º–æ–æ–±—Ä–æ–±–∫–∞; –û—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è; –ü–∞–∫—É–≤–∞–Ω–Ω—è; –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è</span></p>
        <textarea id="pSteps">–ü—Ä–∏–π–º–∞–Ω–Ω—è; –ó–∞—Å—ñ–ª; –¢—É–º–±–ª–µ—Ä; –¢–µ—Ä–º–æ–æ–±—Ä–æ–±–∫–∞; –û—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è; –ü–∞–∫—É–≤–∞–Ω–Ω—è; –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è</textarea>
        <div class="row" style="margin-top:6px">
          <button class="btn" onclick="buildSteps()">üîÅ –û–Ω–æ–≤–∏—Ç–∏ –µ—Ç–∞–ø–∏</button>
          <button class="btn" onclick="copyCSV('csvSteps')">üìã CSV (steps)</button>
        </div>
        <div id="csvSteps" class="out" style="margin-top:8px">‚Äî</div>
      </div>

      <div class="box">
        <h3>–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å</h3>
        <textarea id="pDesc">–í–∞—Ä–µ–Ω–∞ —à–∏–Ω–∫–∞ –∑ –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–æ—ó —Å–≤–∏–Ω–∏–Ω–∏; –≤–∞–∫—É—É–º–Ω–µ –ø–∞–∫—É–≤–∞–Ω–Ω—è; –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è +0‚Ä¶+6¬∞C.</textarea>
        <div class="row" style="margin-top:6px">
          <button class="btn" onclick="summaryHead()">üß† –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ä–µ–∑—é–º–µ</button>
          <button class="btn" onclick="copyCSV('csvHead')">üìã CSV (header)</button>
        </div>
        <div id="headOut" class="out" style="margin-top:8px">‚Äî</div>
        <div id="csvHead" class="out" style="margin-top:8px">‚Äî</div>
      </div>
    </div>
  </div>

  <!-- 2. –ù–ï–ë–ï–ó–ü–ï–ö–ò/–†–ò–ó–ò–ö–ò + –†–Ü–®–ï–ù–ù–Ø –©–û–î–û CCP -->
  <div class="card">
    <h2>‚ö†Ô∏è –ù–µ–±–µ–∑–ø–µ–∫–∏/—Ä–∏–∑–∏–∫–∏ —Ç–∞ —Ä—ñ—à–µ–Ω–Ω—è —â–æ–¥–æ CCP</h2>
    <div class="row">
      <button class="btn" onclick="addHaz()">‚ûï –î–æ–¥–∞—Ç–∏ –Ω–µ–±–µ–∑–ø–µ–∫—É</button>
      <button class="btn" onclick="presetHaz()">üß™ –ü—Ä–∏–∫–ª–∞–¥</button>
      <button class="btn" onclick="copyCSV('csvHaz')">üìã CSV (hazards)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblHaz">
        <thead>
          <tr>
            <th>#</th>
            <th>–ï—Ç–∞–ø</th>
            <th class="dark">–ù–µ–±–µ–∑–ø–µ–∫–∞ (–ë/–•/–§)</th>
            <th class="dark">–ô–º–æ–≤—ñ—Ä–Ω. (1‚Äì5)</th>
            <th class="dark">–¢—è–∂–∫—ñ—Å—Ç—å (1‚Äì5)</th>
            <th>–†–∏–∑–∏–∫ = L√óS</th>
            <th>–ó–∞—Ö–æ–¥–∏ –∫–æ–Ω—Ç—Ä–æ–ª—é</th>
            <th>CCP?</th>
            <th>–õ—ñ–º—ñ—Ç/–º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥</th>
            <th>√ó</th>
          </tr>
        </thead>
        <tbody id="bodyHaz"></tbody>
      </table>
    </div>
    <div id="csvHaz" class="out" style="margin-top:8px">‚Äî</div>
  </div>

  <!-- 3. –í–ù–£–¢–†–Ü–®–ù–Ü–ô –ê–£–î–ò–¢ (–ß–ï–ö-–õ–Ü–°–¢) -->
  <div class="card">
    <h2>üßÆ –í–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –∞—É–¥–∏—Ç (—á–µ–∫-–ª—ñ—Å—Ç)</h2>
    <div class="row">
      <button class="btn" onclick="addAudit()">‚ûï –î–æ–¥–∞—Ç–∏ –ø—É–Ω–∫—Ç</button>
      <button class="btn" onclick="presetAudit()">üß™ –ü—Ä–∏–∫–ª–∞–¥ —á–µ–∫-–ª—ñ—Å—Ç–∞</button>
      <button class="btn" onclick="calcAudit()">‚úÖ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –±–∞–ª</button>
      <button class="btn" onclick="copyCSV('csvAudit')">üìã CSV (audit)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblAudit">
        <thead>
          <tr>
            <th>#</th>
            <th>–ü–∏—Ç–∞–Ω–Ω—è</th>
            <th class="dark">–í–∞–≥–∞ (1‚Äì3)</th>
            <th class="dark">O (—Ç–∞–∫/–Ω—ñ/–Ω/–¥)</th>
            <th>–ë–∞–ª</th>
            <th>–ü—Ä–∏–º—ñ—Ç–∫–∞</th>
            <th>√ó</th>
          </tr>
        </thead>
        <tbody id="bodyAudit"></tbody>
      </table>
    </div>
    <div id="auditSum" class="out" style="margin-top:8px">‚Äî</div>
    <div id="csvAudit" class="out" style="margin-top:8px">‚Äî</div>
  </div>

  <!-- 4. –ü–õ–ê–ù CAPA -->
  <div class="card">
    <h2>üõ†Ô∏è –ü–ª–∞–Ω CAPA</h2>
    <div class="row">
      <button class="btn" onclick="addCAPA()">‚ûï –î–æ–¥–∞—Ç–∏ CAPA</button>
      <button class="btn" onclick="presetCAPA()">üß™ –ü—Ä–∏–∫–ª–∞–¥</button>
      <button class="btn" onclick="copyCSV('csvCAPA')">üìã CSV (capa)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblCAPA">
        <thead>
          <tr>
            <th>#</th>
            <th>–ü—Ä–æ–±–ª–µ–º–∞</th>
            <th class="dark">Root cause</th>
            <th class="dark">–ö–æ—Ä–∏–≥—É–≤–∞–ª—å–Ω—ñ</th>
            <th>–ó–∞–ø–æ–±—ñ–∂–Ω—ñ</th>
            <th>–í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π</th>
            <th>–¢–µ—Ä–º—ñ–Ω</th>
            <th>√ó</th>
          </tr>
        </thead>
        <tbody id="bodyCAPA"></tbody>
      </table>
    </div>
    <div id="csvCAPA" class="out" style="margin-top:8px">‚Äî</div>
  </div>

  <!-- 5. –ü–û–†–¢–§–û–õ–Ü–û / –ñ–£–†–ù–ê–õ / –ö–í–ò–¢–û–ö / QR / NFC -->
  <div class="card">
    <h2>üì¶ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ / –ñ—É—Ä–Ω–∞–ª / –ö–≤–∏—Ç–æ–∫ 58 –º–º / QR / NFC</h2>
    <div class="row">
      <button class="btn" onclick="addLog()">‚ûï –î–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å</button>
      <button class="btn" onclick="buildQR()">üß© –ó—ñ–±—Ä–∞—Ç–∏ QR</button>
      <button class="btn" onclick="copyEl('qrOut')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏ QR-payload</button>
      <button class="btn" onclick="copyCSV('csvLog')">üìã CSV (journal)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblLog">
        <thead>
          <tr>
            <th>#</th>
            <th>–ü—Ä–æ–¥—É–∫—Ç</th>
            <th class="dark">–ï—Ç–∞–ø—ñ–≤</th>
            <th class="dark">CCP (–∫-—Ç—å)</th>
            <th>–ê—É–¥–∏—Ç %</th>
            <th>CAPA (–∫-—Ç—å)</th>
            <th>√ó</th>
          </tr>
        </thead>
        <tbody id="bodyLog"></tbody>
      </table>
    </div>
    <div id="csvLog" class="out" style="margin-top:8px">‚Äî</div>

    <div class="grid g2" style="margin-top:12px">
      <div class="box">
        <h3>QR / NFC</h3>
        <div id="qrOut" class="out">‚Äî</div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>NFC: –∫–æ–Ω—Ç–∞–∫—Ç</label><input id="nfcPhone" type="text" value="+380XXXXXXXXX"></div>
          <div style="flex:1"><label>NFC: –∞–≤—Ç–æ—Ä</label><input id="nfcOper" type="text" value="–°—Ç—É–¥–µ–Ω—Ç –¢–ü–¢"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <button class="btn" onclick="buildNFC()">üì≤ –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ NFC-payload</button>
          <button class="btn" onclick="copyEl('nfcOut')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏</button>
        </div>
        <div id="nfcOut" class="out">‚Äî</div>
      </div>

      <div class="box">
        <h3>–ö–≤–∏—Ç–æ–∫ 58 –º–º ‚Äî ‚ÄúHACCP SUMMARY‚Äù</h3>
        <div class="row">
          <button class="btn" onclick="scrollTicket()">üßæ –ü–æ–∫–∞–∑–∞—Ç–∏</button>
          <button class="btn" onclick="window.print()">üñ®Ô∏è –î—Ä—É–∫</button>
        </div>
        <div class="ticket" id="ticket" style="margin-top:8px">
          <h4>HACCP SUMMARY</h4>
          <p><b>–ü—Ä–æ–¥—É–∫—Ç:</b> <span id="tProd">‚Äî</span></p>
          <p><b>–ï—Ç–∞–ø—ñ–≤:</b> <span id="tSteps">‚Äî</span> ¬∑ <b>CCP:</b> <span id="tCCP">‚Äî</span></p>
          <p><b>–ê—É–¥–∏—Ç:</b> <span id="tAudit">‚Äî</span>% ¬∑ <b>CAPA:</b> <span id="tCapa">‚Äî</span></p>
          <div class="line"></div>
          <p><b>–ö–ª—é—á–æ–≤–µ CCP:</b> <span id="tKey">‚Äî</span></p>
          <p><small>–ù–∞–≤—á–∞–ª—å–Ω–∞ —Å–∏–º—É–ª—è—Ü—ñ—è. –î–ª—è –≤–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–Ω—è ‚Äî –ø–æ–≥–æ–¥–∏—Ç–∏ –∑ HACCP-–≥—Ä—É–ø–æ—é.</small></p>
        </div>
      </div>
    </div>
  </div>

  <!-- 6. –•–Ü–î –†–û–ë–û–¢–ò + –û–¶–Ü–ù–Æ–í–ê–ù–ù–Ø -->
  <div class="card">
    <h2>ü™ú –•—ñ–¥ —Ä–æ–±–æ—Ç–∏ (45‚Äì90 —Ö–≤)</h2>
    <ol>
      <li>–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–¥—É–∫—Ç —ñ –µ—Ç–∞–ø–∏; —Å—Ñ–æ—Ä–º—É–π—Ç–µ —Ä–µ–∑—é–º–µ.</li>
      <li>–î–æ–¥–∞–π—Ç–µ –Ω–µ–±–µ–∑–ø–µ–∫–∏, –æ—Ü—ñ–Ω—ñ—Ç—å L√óS, –ø—Ä–∏–π–º—ñ—Ç—å —Ä—ñ—à–µ–Ω–Ω—è —â–æ–¥–æ CCP —ñ –≤–∏–∑–Ω–∞—á—Ç–µ –ª—ñ–º—ñ—Ç–∏/–º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥.</li>
      <li>–°—Ñ–æ—Ä–º—É–π—Ç–µ —á–µ–∫-–ª–∏—Å—Ç –∞—É–¥–∏—Ç—É (10‚Äì15 –ø—É–Ω–∫—Ç—ñ–≤) —ñ –ø–æ—Ä–∞—Ö—É–π—Ç–µ % –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ.</li>
      <li>–°—Ç–≤–æ—Ä—ñ—Ç—å 2‚Äì4 –∑–∞–ø–∏—Å–∏ CAPA –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∏–∑–∏–∫—ñ–≤/–∞—É–¥–∏—Ç—É.</li>
      <li>–ó–∞–ø–∏—à—ñ—Ç—å –ø—ñ–¥—Å—É–º–æ–∫ —É –∂—É—Ä–Ω–∞–ª; –∑–≥–µ–Ω–µ—Ä—É–π—Ç–µ QR/NFC —ñ –∫–≤–∏—Ç–æ–∫.</li>
    </ol>
  </div>

  <div class="card">
    <h2>‚úÖ –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è (10 –±–∞–ª—ñ–≤)</h2>
    <table class="table">
      <thead><tr><th>–ö—Ä–∏—Ç–µ—Ä—ñ–π</th><th>–ë–∞–ª–∏</th></tr></thead>
      <tbody>
        <tr><td>–ü–∞—Å–ø–æ—Ä—Ç –ø—Ä–æ–¥—É–∫—Ç—É —Ç–∞ –º–∞—Ä—à—Ä—É—Ç –ø—Ä–æ—Ü–µ—Å—É</td><td>2</td></tr>
        <tr><td>–ù–µ–±–µ–∑–ø–µ–∫–∏/—Ä–∏–∑–∏–∫–∏, —Ä—ñ—à–µ–Ω–Ω—è —â–æ–¥–æ CCP, –ª—ñ–º—ñ—Ç–∏/–º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥</td><td>4</td></tr>
        <tr><td>–ê—É–¥–∏—Ç (–º–µ—Ç–æ–¥–∏–∫–∞, –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ %)</td><td>2</td></tr>
        <tr><td>–ü–ª–∞–Ω CAPA —Ç–∞ –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ (CSV/QR/NFC/–∫–≤–∏—Ç–æ–∫)</td><td>2</td></tr>
      </tbody>
    </table>
  </div>
</div>

<script>
  // –í–±—É–¥–æ–≤–∞–Ω–∏–π —Ä–µ–∂–∏–º (Moodle iFrame)
  (function(){ if (window.self !== window.top) document.documentElement.classList.add('embedded'); })();
  const byId = id => document.getElementById(id);
  const rnd = (n,d=2)=>Number((+n).toFixed(d));

  function copyCSV(id){ const t=byId(id).textContent.trim(); if(!t||t==='‚Äî'){alert('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è');return;} navigator.clipboard.writeText(t); }
  function copyEl(id){ const t=byId(id).textContent.trim(); if(!t||t==='‚Äî'){alert('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö');return;} navigator.clipboard.writeText(t); }
  function reindex(tb){ [...tb.querySelectorAll('tr')].forEach((tr,i)=>tr.querySelector('.idx')?.textContent=i+1); }

  // ===== 1) HEAD & STEPS =====
  function buildSteps(){
    const steps = byId('pSteps').value.split(';').map(s=>s.trim()).filter(Boolean);
    byId('csvSteps').textContent = steps.map((s,i)=> `${i+1} | ${s}`).join('\n') || '‚Äî';
    return steps;
  }
  function summaryHead(){
    const name = byId('pName').value.trim();
    const cat  = byId('pCat').value.trim();
    const shelf= +byId('pShelf').value||0;
    const steps= buildSteps();
    const txt = `PRODUCT:${name} | CAT:${cat} | TARGET_SHELF:${shelf} –¥—ñ–± | STEPS:${steps.length} (${steps.join(' ‚Üí ')}) | NOTE:${byId('pDesc').value.trim()}`;
    byId('headOut').textContent = txt;
    byId('csvHead').textContent = 'HEAD|' + txt;
    updateTicket();
    return {name,cat,shelf,steps};
  }

  // ===== 2) HAZARDS / CCP =====
  const bodyHaz = byId('bodyHaz');
  function addHaz(sample){
    const steps = buildSteps(); const defaultStep = steps[3] || '–¢–µ—Ä–º–æ–æ–±—Ä–æ–±–∫–∞';
    const s = Object.assign({step:defaultStep, type:'–ë—ñ–æ–ª–æ–≥—ñ—á–Ω–∞', L:3, S:4, ctrl:'–ü–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—è 72¬∞C/15—Å', ccp:'—Ç–∞–∫', lim:'‚â•72¬∞C/15—Å; –±–µ–∑–ø–µ—Ä–µ—Ä–≤–Ω–∏–π –∑–∞–ø–∏—Å T'}, sample||{});
    const risk = (s.L*s.S);
    const tr=document.createElement('tr');
    tr.innerHTML=`
      <td class="idx">1</td>
      <td><input type="text" value="${s.step}"></td>
      <td class="dark"><input type="text" value="${s.type}"></td>
      <td class="dark"><input type="number" step="1" value="${s.L}" onchange="recalcRisk(this)"></td>
      <td class="dark"><input type="number" step="1" value="${s.S}" onchange="recalcRisk(this)"></td>
      <td class="risk">${risk}</td>
      <td><input type="text" value="${s.ctrl}"></td>
      <td>
        <select onchange="markCCP(this)">
          <option ${s.ccp==='—Ç–∞–∫'?'selected':''}>—Ç–∞–∫</option>
          <option ${s.ccp!=='—Ç–∞–∫'?'selected':''}>–Ω—ñ</option>
        </select>
      </td>
      <td><input type="text" value="${s.lim}"></td>
      <td><button class="btn" onclick="this.closest('tr').remove(); reindex(bodyHaz); buildCSV_Haz(); updateTicket();">‚úñ</button></td>
    `;
    bodyHaz.appendChild(tr); reindex(bodyHaz); buildCSV_Haz(); updateTicket();
  }
  function recalcRisk(el){
    const r = el.closest('tr');
    const L = +r.children[3].querySelector('input').value||1;
    const S = +r.children[4].querySelector('input').value||1;
    const risk = L*S;
    r.querySelector('.risk').textContent = risk;
    // –∞–≤—Ç–æ-CCP (—Å–ø—Ä–æ—â–µ–Ω–æ): —è–∫—â–æ S>=4 —Ç–∞ L>=3 —ñ —î –∫–æ–Ω—Ç—Ä–æ–ª—å ‚Äî ‚Äú—Ç–∞–∫‚Äù
    const ctrl = r.children[6].querySelector('input').value.trim();
    const sel = r.children[7].querySelector('select');
    if(S>=4 && L>=3 && ctrl) sel.value='—Ç–∞–∫';
    buildCSV_Haz(); updateTicket();
  }
  function markCCP(sel){ buildCSV_Haz(); updateTicket(); }
  function presetHaz(){
    bodyHaz.innerHTML='';
    addHaz({step:'–¢–µ—Ä–º–æ–æ–±—Ä–æ–±–∫–∞', type:'–ë—ñ–æ–ª–æ–≥—ñ—á–Ω–∞', L:3, S:5, ctrl:'–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è core ‚â•72¬∞C/15—Å', ccp:'—Ç–∞–∫', lim:'Core ‚â•72¬∞C/15—Å; —á–∞—Å—Ç–æ—Ç–∞: –∫–æ–∂–Ω–∞ –ø–∞—Ä—Ç—ñ—è'});
    addHaz({step:'–û—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è', type:'–ë—ñ–æ–ª–æ–≥—ñ—á–Ω–∞', L:3, S:4, ctrl:'‚â§+6¬∞C –∑–∞ ‚â§6 –≥–æ–¥', ccp:'–Ω—ñ', lim:'–ö—Ä–∏–≤–∞ –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è; t –∑–∞–ø–∏—Å –∫–æ–∂–Ω—ñ 30 —Ö–≤'});
    addHaz({step:'–ü–∞–∫—É–≤–∞–Ω–Ω—è (–≤–∞–∫—É—É–º)', type:'–§—ñ–∑–∏—á–Ω–∞', L:2, S:3, ctrl:'–Ü–Ω—Ç–µ–≥—Ä–∏—Ç—ñ/–≥–µ—Ä–º–µ—Ç–∏—á–Ω—ñ—Å—Ç—å', ccp:'–Ω—ñ', lim:'–ë—É–ª—å–±–∞—à–∫–æ–≤–∏–π —Ç–µ—Å—Ç; 1/–ø–∞–ª–µ—Ç—É'});
    addHaz({step:'–ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è', type:'–ë—ñ–æ–ª–æ–≥—ñ—á–Ω–∞', L:2, S:4, ctrl:'+0‚Ä¶+6¬∞C; FEFO', ccp:'–Ω—ñ', lim:'t-–ª–æ–≥; –¥–æ—Ç—Ä–∏–º–∞–Ω–Ω—è FEFO'});
  }
  function buildCSV_Haz(){
    const rows=[...bodyHaz.querySelectorAll('tr')].map(r=>{
      const step=r.children[1].querySelector('input').value.trim();
      const type=r.children[2].querySelector('input').value.trim();
      const L=r.children[3].querySelector('input').value.trim();
      const S=r.children[4].querySelector('input').value.trim();
      const risk=r.children[5].textContent.trim();
      const ctrl=r.children[6].querySelector('input').value.trim();
      const ccp=r.children[7].querySelector('select').value.trim();
      const lim=r.children[8].querySelector('input').value.trim();
      return [step,type,L,S,risk,ctrl,ccp,lim].join(' | ');
    });
    byId('csvHaz').textContent = rows.join('\n') || '‚Äî';
    return rows;
  }

  // ===== 3) AUDIT =====
  const bodyAudit = byId('bodyAudit');
  function addAudit(sample){
    const s = Object.assign({q:'–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–∞–ª—ñ–±—Ä—É–≤–∞–Ω–Ω—è —Ç–µ—Ä–º–æ–¥–∞—Ç—á–∏–∫—ñ–≤', w:3, o:'—Ç–∞–∫', note:''}, sample||{});
    const tr=document.createElement('tr');
    tr.innerHTML = `
      <td class="idx">1</td>
      <td><input type="text" value="${s.q}"></td>
      <td class="dark"><input type="number" step="1" value="${s.w}"></td>
      <td class="dark">
        <select>
          <option ${s.o==='—Ç–∞–∫'?'selected':''}>—Ç–∞–∫</option>
          <option ${s.o==='–Ω—ñ'?'selected':''}>–Ω—ñ</option>
          <option ${s.o==='–Ω/–¥'?'selected':''}>–Ω/–¥</option>
        </select>
      </td>
      <td class="score">‚Äî</td>
      <td><input type="text" value="${s.note}"></td>
      <td><button class="btn" onclick="this.closest('tr').remove(); reindex(bodyAudit); calcAudit();">‚úñ</button></td>
    `;
    bodyAudit.appendChild(tr); reindex(bodyAudit);
  }
  function presetAudit(){
    bodyAudit.innerHTML='';
    addAudit({q:'–î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤ —Ç–µ—Ä–º–æ–æ–±—Ä–æ–±–∫–∏ (core T)', w:3, o:'—Ç–∞–∫'});
    addAudit({q:'–í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ—Ü–µ—Å—É –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è', w:3, o:'–Ω—ñ', note:'–ü–æ—Ç—Ä—ñ–±–µ–Ω –≥—Ä–∞—Ñ—ñ–∫ t'});
    addAudit({q:'–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ—Å—Ç—ñ –ø–∞–∫—É–≤–∞–Ω–Ω—è', w:2, o:'—Ç–∞–∫'});
    addAudit({q:'FEFO/–∞–¥—Ä–µ—Å–∞—Ü—ñ—è –Ω–∞ —Å–∫–ª–∞–¥—ñ', w:2, o:'—Ç–∞–∫'});
    addAudit({q:'–ê–ª–µ—Ä–≥–µ–Ω–∏/–µ—Ç–∏–∫–µ—Ç–∫–∞ (EAN-13/–¥–∞—Ç–∞/–ª–æ—Ç)', w:2, o:'—Ç–∞–∫'});
    addAudit({q:'–¢—Ä–∞—Å—É–≤–∞–Ω–Ω—è RM‚ÜíFG‚Üí–∫–ª—ñ—î–Ω—Ç', w:3, o:'—Ç–∞–∫'});
    calcAudit();
  }
  function calcAudit(){
    const rows=[...bodyAudit.querySelectorAll('tr')];
    let max=0, got=0;
    rows.forEach(r=>{
      const w=+r.children[2].querySelector('input').value||1;
      const o=r.children[3].querySelector('select').value;
      max += w;
      const s = (o==='—Ç–∞–∫')? w : (o==='–Ω/–¥'? 0 : 0);
      if(o==='—Ç–∞–∫') got += w;
      r.querySelector('.score').textContent = s;
    });
    const pct = max? rnd(got/max*100,1) : 0;
    const tag = pct>=90? 'üü¢' : (pct>=75? 'üü†' : 'üî¥');
    byId('auditSum').textContent = `–ê—É–¥–∏—Ç: ${got}/${max} –±–∞–ª—ñ–≤ ‚Üí ${pct}% ${tag}`;
    byId('csvAudit').textContent = rows.map((r,i)=>{
      return [i+1,
              r.children[1].querySelector('input').value.trim(),
              r.children[2].querySelector('input').value.trim(),
              r.children[3].querySelector('select').value.trim(),
              r.children[4].textContent.trim(),
              r.children[5].querySelector('input').value.trim()].join(' | ');
    }).join('\n') || '‚Äî';
    updateTicket();
    return pct;
  }

  // ===== 4) CAPA =====
  const bodyCAPA = byId('bodyCAPA');
  function addCAPA(sample){
    const s = Object.assign({p:'–û—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∏—â—É—î 6 –≥–æ–¥', root:'–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —á–∏–ª–ª–µ—Ä–∞', corr:'–ó–º–µ–Ω—à–∏—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–∞—Ä—Ç—ñ—ó', prev:'–¢–û —á–∏–ª–ª–µ—Ä–∞; –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥', resp:'–°—Ç—É–¥–µ–Ω—Ç –¢–ü–¢', due:new Date().toISOString().slice(0,10)}, sample||{});
    const tr=document.createElement('tr');
    tr.innerHTML=`
      <td class="idx">1</td>
      <td><input type="text" value="${s.p}"></td>
      <td class="dark"><input type="text" value="${s.root}"></td>
      <td class="dark"><input type="text" value="${s.corr}"></td>
      <td><input type="text" value="${s.prev}"></td>
      <td><input type="text" value="${s.resp}"></td>
      <td><input type="date" value="${s.due}"></td>
      <td><button class="btn" onclick="this.closest('tr').remove(); reindex(bodyCAPA); buildCSV_CAPA(); updateTicket();">‚úñ</button></td>
    `;
    bodyCAPA.appendChild(tr); reindex(bodyCAPA); buildCSV_CAPA(); updateTicket();
  }
  function presetCAPA(){
    bodyCAPA.innerHTML='';
    addCAPA({p:'–í—ñ–¥—Å—É—Ç–Ω—ñ–π –≥—Ä–∞—Ñ—ñ–∫ t –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è', root:'–ù–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π —Ä–µ—î—Å—Ç—Ä–∞—Ç–æ—Ä', corr:'–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –ª–æ–≥–µ—Ä t –∑ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 5 —Ö–≤', prev:'–©–æ–¥–µ–Ω–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤', resp:'–°—Ç—É–¥–µ–Ω—Ç –¢–ü–¢', due:new Date().toISOString().slice(0,10)});
    addCAPA({p:'–ß–∞—Å—Ç–∫–æ–≤—ñ –≤–∏—Ç–æ–∫–∏ –ø–∞–∫—É–≤–∞–Ω–Ω—è', root:'–ù–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ç–∏—Å–∫/–ø–ª—ñ–≤–∫–∞', corr:'–ü—ñ–¥—ñ–±—Ä–∞—Ç–∏ —Ä–µ–∂–∏–º –≤–∞–∫—É—É–º—É/–ø–ª—ñ–≤–∫—É', prev:'–ë–∞—Ç—á-—Ç–µ—Å—Ç–∏ –≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ—Å—Ç—ñ', resp:'–°—Ç—É–¥–µ–Ω—Ç –¢–ü–¢', due:new Date().toISOString().slice(0,10)});
  }
  function buildCSV_CAPA(){
    const rows=[...bodyCAPA.querySelectorAll('tr')].map(r=>{
      return [
        r.querySelector('.idx').textContent.trim(),
        r.children[1].querySelector('input').value.trim(),
        r.children[2].querySelector('input').value.trim(),
        r.children[3].querySelector('input').value.trim(),
        r.children[4].querySelector('input').value.trim(),
        r.children[5].querySelector('input').value.trim(),
        r.children[6].querySelector('input').value.trim()
      ].join(' | ');
    });
    byId('csvCAPA').textContent = rows.join('\n') || '‚Äî';
    return rows;
  }

  // ===== 5) PORTFOLIO / LOG / TICKET / QR / NFC =====
  const bodyLog = byId('bodyLog');
  function addLog(){
    const head = summaryHead();
    const ccpCount = [...bodyHaz.querySelectorAll('tr')].filter(r=>r.children[7].querySelector('select').value==='—Ç–∞–∫').length;
    const auditPct = calcAudit();
    const capaCount = [...bodyCAPA.querySelectorAll('tr')].length;
    const tr=document.createElement('tr');
    tr.innerHTML = `
      <td class="idx">1</td>
      <td><input type="text" value="${head.name}"></td>
      <td class="dark">${head.steps.length}</td>
      <td class="dark">${ccpCount}</td>
      <td>${auditPct}</td>
      <td>${capaCount}</td>
      <td><button class="btn" onclick="this.closest('tr').remove(); reindex(bodyLog); buildCSV_Log();">‚úñ</button></td>
    `;
    bodyLog.appendChild(tr); reindex(bodyLog); buildCSV_Log();
    updateTicket();
  }
  function buildCSV_Log(){
    const rows=[...bodyLog.querySelectorAll('tr')].map(r=>{
      return [
        r.querySelector('.idx').textContent.trim(),
        r.children[1].querySelector('input').value.trim(),
        r.children[2].textContent.trim(),
        r.children[3].textContent.trim(),
        r.children[4].textContent.trim(),
        r.children[5].textContent.trim()
      ].join(' | ');
    });
    byId('csvLog').textContent = rows.join('\n') || '‚Äî';
  }
  function buildQR(){
    const head = summaryHead();
    const hazards = buildCSV_Haz();
    const audit = byId('auditSum').textContent.trim();
    const capa = buildCSV_CAPA();
    const payload = {
      product: head.name,
      steps: head.steps.length,
      key_ccp: [...bodyHaz.querySelectorAll('tr')].find(r=>r.children[7].querySelector('select').value==='—Ç–∞–∫')?.children[1].querySelector('input').value || '‚Äî',
      audit: audit,
      capa: capa.length
    };
    byId('qrOut').textContent = JSON.stringify(payload);
    updateTicket();
  }
  function buildNFC(){
    const head = summaryHead();
    const txt = [
      `HACCP_CARD`,
      `PRODUCT:${head.name}`,
      `STEPS:${head.steps.length}`,
      `AUDIT:${byId('auditSum').textContent.trim()}`,
      `CAPA:${[...bodyCAPA.querySelectorAll('tr')].length}`,
      `CONTACT:${byId('nfcPhone').value} AUTHOR:${byId('nfcOper').value}`,
      `STAMP:${new Date().toISOString().slice(0,19).replace('T',' ')}`
    ].join('\n');
    byId('nfcOut').textContent = txt;
  }
  function updateTicket(){
    const head = summaryHead();
    const ccpCount = [...bodyHaz.querySelectorAll('tr')].filter(r=>r.children[7].querySelector('select').value==='—Ç–∞–∫').length;
    const key = [...bodyHaz.querySelectorAll('tr')].find(r=>r.children[7].querySelector('select').value==='—Ç–∞–∫')?.children[1].querySelector('input').value || '‚Äî';
    const capaCount = [...bodyCAPA.querySelectorAll('tr')].length;
    const auditPct = (byId('auditSum').textContent.match(/(\d+(?:\.\d+)?)%/)||[])[1] || '‚Äî';
    byId('tProd').textContent = head.name;
    byId('tSteps').textContent = head.steps.length;
    byId('tCCP').textContent = ccpCount;
    byId('tAudit').textContent = auditPct;
    byId('tCapa').textContent = capaCount;
    byId('tKey').textContent = key;
  }
  function scrollTicket(){ byId('ticket').scrollIntoView({behavior:'smooth',block:'center'}); }

  // ===== INIT =====
  (function init(){
    buildSteps(); summaryHead(); presetHaz(); presetAudit(); presetCAPA(); calcAudit(); buildQR(); updateTicket();
    document.addEventListener('change', e=>{
      if(e.target.matches('input,select,textarea')){
        if(e.target.closest('#tblHaz')){ buildCSV_Haz(); updateTicket(); }
        if(e.target.closest('#tblAudit')){ calcAudit(); }
        if(e.target.closest('#tblCAPA')){ buildCSV_CAPA(); updateTicket(); }
        if(['pName','pCat','pShelf','pSteps','pDesc'].includes(e.target.id)){ summaryHead(); updateTicket(); }
      }
    });
  })();
</script>
</body>
</html>
