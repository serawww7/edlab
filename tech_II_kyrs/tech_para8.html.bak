<!-- tech_para8.html
     –ü–ê–†–ê 8 (–∞—É–¥–∏—Ç–æ—Ä–Ω–æ) –¥–ª—è —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–≤ –∑ –ø–µ—Ä–µ—Ä–æ–±–∫–∏ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó —Ç–≤–∞—Ä–∏–Ω–Ω–∏—Ü—Ç–≤–∞
     –¢–µ–º–∞: –†–ï–¶–ï–ü–¢–£–†–ê –Ü –°–û–ë–Ü–í–ê–†–¢–Ü–°–¢–¨ ‚Äî –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Ç—ñ—ó, % —Å–∫–ª–∞–¥—É, –≤–∏—Ö—ñ–¥ (yield),
           —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ –∑ —Ü—ñ–Ω–æ—é, –∞–ª–µ—Ä–≥–µ–Ω–∏, —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å/–∫–≥, —Ü—ñ–Ω–∞, –º–∞—Ä–∂–∞, QR/NFC, –∫–≤–∏—Ç–æ–∫ 58 –º–º, CSV.
     –§–æ–∫—É—Å: —Ç–µ–ª–µ—Ñ–æ–Ω–∏/–ü–ö; –±–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫; –≥–æ—Ç–æ–≤–æ –¥–ª—è GitHub Pages —Ç–∞ Moodle (iframe).
     –û–±–ª–∞–¥–Ω–∞–Ω–Ω—è: —Ç–µ–ª–µ—Ñ–æ–Ω–∏; (–æ–ø—Ü.) —Ç–µ—Ä–º–æ–ø—Ä–∏–Ω—Ç–µ—Ä 58 –º–º; NFC-–º—ñ—Ç–∫–∏.

     –ü—Ä–∏–º—ñ—Ç–∫–∞ –∫–æ–Ω—Ç—Ä–∞—Å—Ç—É: —Ç–µ–º–Ω—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—å –º–∞—é—Ç—å —Å–≤—ñ—Ç–ª–∏–π —Ç–µ–∫—Å—Ç (.dark).
     –£–í–ê–ì–ê: –Ω–∞–≤—á–∞–ª—å–Ω–∞ –º–æ–¥–µ–ª—å. –§–∞–∫—Ç–∏—á–Ω—ñ –∫–∞–ª—å–∫—É–ª—è—Ü—ñ—ó –ø–æ–≥–æ–¥–∂—É–π—Ç–µ –∑ —Ñ—ñ–Ω–≤—ñ–¥–¥—ñ–ª–æ–º —ñ –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º–∏ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞.
-->
<!DOCTYPE html>
<html lang="uk">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>–ü–∞—Ä–∞ 8 (—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏) ‚Äî –†–µ—Ü–µ–ø—Ç—É—Ä–∞ —ñ —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è, —Ü—ñ–Ω–∞/–∫–≥, –º–∞—Ä–∂–∞, QR/NFC/CSV</title>
<meta name="color-scheme" content="light dark">
<style>
  :root{
    --bg:#0b1220; --card:#0f172a; --muted:#94a3b8; --text:#e2e8f0;
    --accent:#22c55e; --accent-2:#60a5fa; --warn:#f59e0b; --bad:#ef4444; --good:#10b981; --line:#1f2937;
    --darkcell:#0b1324; --darkink:#e6eef9; --darkink2:#e5e7eb;
  }
  *{box-sizing:border-box}
  body{margin:0;background:linear-gradient(180deg,#0b1220,#111827 30%,#0b1220);color:var(--text);
       font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,"Helvetica Neue",Arial,sans-serif;line-height:1.55}
  .wrap{max-width:1100px;margin:0 auto;padding:24px 16px 64px}
  .badge{display:inline-block;padding:6px 10px;border:1px solid var(--line);background:#0b1220;border-radius:999px;
         font-size:12px;color:var(--muted);letter-spacing:.3px}
  h1{font-size:34px;margin:6px 0 12px;line-height:1.15;
     background:linear-gradient(90deg,#60a5fa,#22c55e);-webkit-background-clip:text;-webkit-text-fill-color:transparent}
  h2{font-size:22px;margin:28px 0 12px} h3{font-size:18px;margin:20px 0 8px;color:#cbd5e1}
  p{margin:10px 0}.small{font-size:12px;color:#9fb0c8}.muted{color:#93a3b5}.mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Courier New",monospace}
  .btn{display:inline-block;padding:10px 14px;border-radius:10px;border:1px solid #223049;background:#0d1a2e;color:#dbeafe;text-decoration:none;cursor:pointer}
  .btn:hover{background:#0f1f39}
  .grid{display:grid;gap:12px}.g2{grid-template-columns:repeat(2,minmax(0,1fr))}.g3{grid-template-columns:repeat(3,minmax(0,1fr))}
  @media (max-width:1000px){.g2,.g3{grid-template-columns:1fr}}
  .row{display:flex;gap:10px;flex-wrap:wrap}
  .card{background:linear-gradient(180deg,#0f172a,#0b1220);border:1px solid var(--line);border-radius:16px;padding:16px;margin:12px 0;box-shadow:0 6px 24px rgba(0,0,0,.25)}
  .box{border:1px solid #223049;border-radius:12px;padding:12px;background:var(--darkcell);color:var(--darkink)}
  .ok{color:var(--good)} .warn{color:var(--warn)} .bad{color:var(--bad)}
  .table{width:100%;border-collapse:separate;border-spacing:0;overflow:auto;border-radius:12px;border:1px solid #223049}
  .table th,.table td{padding:8px 10px;border-bottom:1px solid #1f2937;font-size:14px;vertical-align:top}
  .table thead th{background:#0c1629;color:#a5b4fc;text-align:left;position:sticky;top:0}
  .table tbody tr:nth-child(even){background:var(--darkcell);color:var(--darkink2)}
  .table td.dark,.table th.dark{background:var(--darkcell)!important;color:var(--darkink2)!important}
  .out{background:var(--darkcell);color:var(--darkink2);border:1px dashed #263042;padding:10px 12px;border-radius:10px;word-break:break-all}
  input[type="text"],input[type="number"],input[type="date"],input[type="time"],select,textarea{width:100%;padding:8px 10px;border-radius:10px;border:1px solid #223049;background:#0d1a2e;color:#e6eef9}
  textarea{min-height:84px}
  /* –ß–µ–∫ 58 –º–º */
  .ticket{width:58mm;background:#fff;color:#000;padding:6mm 4mm;border-radius:6px;box-shadow:0 0 0 1px #e5e7eb inset;font-family:"Courier New",ui-monospace,monospace}
  .ticket h4{margin:0 0 6px;font-size:13px;text-align:center}.ticket p{margin:2px 0;font-size:12px}.ticket .line{border-top:1px dashed #111;margin:6px 0}
  .ticket small{font-size:10px}
  /* –í–±—É–¥–æ–≤–∞–Ω–æ –≤ Moodle (iframe) ‚Üí —Å–≤—ñ—Ç–ª–∏–π –≤–∏–≥–ª—è–¥ */
  html.embedded body{background:#fff;color:#111}
  html.embedded .card{background:#fff;border:1px solid #e5e7eb;box-shadow:none}
  html.embedded h1{-webkit-text-fill-color:initial;background:none;color:#111}
  html.embedded .box{background:#f8fafc;color:#111}
  html.embedded .table tbody tr:nth-child(even){background:#f3f4f6;color:#111}
  @media print{@page{margin:4mm}.no-print{display:none!important}}
</style>
</head>
<body>
<div class="wrap">
  <span class="badge">–ü–∞—Ä–∞ 8 ¬∑ –∞—É–¥–∏—Ç–æ—Ä–Ω–æ ¬∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏ –ø–µ—Ä–µ—Ä–æ–±–∫–∏</span>
  <h1>üìò –†–µ—Ü–µ–ø—Ç—É—Ä–∞ —ñ —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è, —Ü—ñ–Ω–∞/–∫–≥, –º–∞—Ä–∂–∞, QR/NFC/CSV</h1>

  <div class="card">
    <h2>üéØ –ú–µ—Ç–∞ –ø–∞—Ä–∏</h2>
    <p>
      –ó–∞ –∑–∞–Ω—è—Ç—Ç—è —Å—Ç—É–¥–µ–Ω—Ç–∏: (1) –∑–±–µ—Ä—É—Ç—å <b>—Ä–µ—Ü–µ–ø—Ç—É—Ä—É</b> –∑ % —ñ —Ü—ñ–Ω–∞–º–∏, (2) –≤–∏–∫–æ–Ω–∞—é—Ç—å <b>–º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Ç—ñ—ó</b>,
      (3) –æ—Ü—ñ–Ω—è—Ç—å <b>–≤–∏—Ö—ñ–¥ (yield)</b>, (4) –ø–æ—Ä–∞—Ö—É—é—Ç—å <b>—Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å/–∫–≥</b> —Ç–∞ <b>–º–∞—Ä–∂—É</b>,
      (5) –∑–≥–µ–Ω–µ—Ä—É—é—Ç—å <b>CSV</b>, <b>QR/NFC</b> —ñ <b>–∫–≤–∏—Ç–æ–∫ 58 –º–º</b>.
    </p>
    <p class="small muted">–¶—ñ–Ω–∏ —Ç–∞ –Ω–æ—Ä–º–∏ ‚Äî –Ω–∞–≤—á–∞–ª—å–Ω—ñ. –î–ª—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ —Å–ª—ñ–¥ –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤—Ç—Ä–∞—Ç–∏, –µ–Ω–µ—Ä–≥—ñ—é, –∞–º–æ—Ä—Ç–∏–∑–∞—Ü—ñ—é, –∑–∞—Ä–ø–ª–∞—Ç—É –π –Ω–∞–∫–ª–∞–¥–Ω—ñ.</p>
  </div>

  <!-- 1. –ë–ê–ó–û–í–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø -->
  <div class="card">
    <h2>‚öôÔ∏è –ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Ç—ñ—ó</h2>
    <div class="grid g3">
      <div class="box">
        <h3>–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è</h3>
        <div class="row">
          <div style="flex:1"><label>–í–∏—Ä—ñ–±</label><input id="prodName" type="text" value="–ö–æ–≤–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞ ‚Äú–ö–ª–∞—Å–∏—á–Ω–∞‚Äù"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–ü–ª–∞–Ω–æ–≤–∞ –º–∞—Å–∞ –ø–∞—Ä—Ç—ñ—ó, –∫–≥</label><input id="batchKg" type="number" step="0.1" value="120"></div>
          <div style="flex:1"><label>–û—á—ñ–∫—É–≤–∞–Ω–∏–π –≤–∏—Ö—ñ–¥ (yield), %</label><input id="yieldPct" type="number" step="0.1" value="96.0"></div>
        </div>
      </div>

      <div class="box">
        <h3>–¶—ñ–Ω–∏ —ñ –Ω–∞—Ü—ñ–Ω–∫–∞</h3>
        <div class="row">
          <div style="flex:1"><label>–ù–∞–∫–ª–∞–¥–Ω—ñ (–ø–æ—Å—Ç—ñ–π–Ω—ñ), –≥—Ä–Ω/–ø–∞—Ä—Ç—ñ—é</label><input id="ohFix" type="number" step="1" value="1200"></div>
          <div style="flex:1"><label>–ï–Ω–µ—Ä–≥—ñ—è —Ç–∞ —ñ–Ω—à–µ, –≥—Ä–Ω/–∫–≥</label><input id="ohPerKg" type="number" step="0.1" value="6.5"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <div style="flex:1"><label>–¶—ñ–ª—å–æ–≤–∞ –º–∞—Ä–∂–∞, %</label><input id="targetMargin" type="number" step="0.1" value="25.0"></div>
          <div style="flex:1"><label>–ü–î–í, %</label><input id="vatPct" type="number" step="0.1" value="20.0"></div>
        </div>
      </div>

      <div class="box">
        <h3>–ö–µ—Ä—É–≤–∞–Ω–Ω—è</h3>
        <div class="row">
          <button class="btn" onclick="recalc()">üßÆ –ü–µ—Ä–µ—Ä–∞—Ö—É–≤–∞—Ç–∏</button>
          <button class="btn" onclick="presetRecipe()">üß™ –ü—Ä–∏–∫–ª–∞–¥ —Ä–µ—Ü–µ–ø—Ç—É—Ä–∏</button>
          <button class="btn" onclick="copyCSV('csvHead')">üìã CSV (head)</button>
        </div>
        <div id="csvHead" class="out" style="margin-top:8px">‚Äî</div>
      </div>
    </div>
  </div>

  <!-- 2. –†–ï–¶–ï–ü–¢–£–†–ê -->
  <div class="card">
    <h2>ü•£ –†–µ—Ü–µ–ø—Ç—É—Ä–∞ (—ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏)</h2>
    <div class="row">
      <button class="btn" onclick="addIngred()">‚ûï –î–æ–¥–∞—Ç–∏ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç</button>
      <button class="btn" onclick="copyCSV('csvIngred')">üìã CSV (recipe)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblIngred">
        <thead>
          <tr>
            <th>#</th>
            <th>–ù–∞–∑–≤–∞</th>
            <th class="dark">% —É —Ñ–∞—Ä—à—ñ</th>
            <th class="dark">–¶—ñ–Ω–∞, –≥—Ä–Ω/–∫–≥</th>
            <th>–ê–õ–ï–†–ì–ï–ù?</th>
            <th>–†–æ–∑—Ä–∞—Ö. –∫–≥</th>
            <th>–í–∞—Ä—Ç—ñ—Å—Ç—å, –≥—Ä–Ω</th>
            <th>√ó</th>
          </tr>
        </thead>
        <tbody id="bodyIngred"></tbody>
      </table>
    </div>
    <div id="csvIngred" class="out" style="margin-top:8px">‚Äî</div>
  </div>

  <!-- 3. –ü–Ü–î–°–£–ú–ö–ò –ö–ê–õ–¨–ö–£–õ–Ø–¶–Ü–á -->
  <div class="card">
    <h2>üìä –ü—ñ–¥—Å—É–º–∫–∏ –∫–∞–ª—å–∫—É–ª—è—Ü—ñ—ó</h2>
    <div class="grid g3">
      <div class="box">
        <h3>–ú–∞—Å–∏</h3>
        <p>–°—É–º–∞ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ (—Ä–æ–∑—Ä–∞—Ö.), –∫–≥: <b><span id="sumKg">‚Äî</span></b></p>
        <p>–í–∏–ø—É—Å–∫ –∑ —É—Ä–∞—Ö. yield, –∫–≥: <b><span id="outKg">‚Äî</span></b></p>
      </div>
      <div class="box">
        <h3>–°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å</h3>
        <p>–°–∏—Ä–æ–≤–∏–Ω–∞, –≥—Ä–Ω: <b><span id="rawCost">‚Äî</span></b></p>
        <p>–ù–∞–∫–ª–∞–¥–Ω—ñ, –≥—Ä–Ω: <b><span id="ohCost">‚Äî</span></b></p>
        <p>–°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å/–∫–≥, –≥—Ä–Ω: <b><span id="cogsKg">‚Äî</span></b></p>
      </div>
      <div class="box">
        <h3>–¶—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è</h3>
        <p>–¶—ñ–ª—å–æ–≤–∞ –º–∞—Ä–∂–∞: <b><span id="margPct">‚Äî</span></b>%</p>
        <p>–¶—ñ–Ω–∞ –±–µ–∑ –ü–î–í, –≥—Ä–Ω/–∫–≥: <b><span id="priceNet">‚Äî</span></b></p>
        <p>–¶—ñ–Ω–∞ –∑ –ü–î–í, –≥—Ä–Ω/–∫–≥: <b><span id="priceVat">‚Äî</span></b></p>
        <div class="row" style="margin-top:6px">
          <button class="btn" onclick="copyCSV('csvSummary')">üìã CSV (summary)</button>
        </div>
        <div id="csvSummary" class="out" style="margin-top:8px">‚Äî</div>
      </div>
    </div>
  </div>

  <!-- 4. –ê–õ–ï–†–ì–ï–ù–ò / –ï–¢–ò–ö–ï–¢–ö–ê (–¢–ï–ö–°–¢) -->
  <div class="card">
    <h2>‚ö†Ô∏è –ê–ª–µ—Ä–≥–µ–Ω–∏ —Ç–∞ –∫–æ—Ä–æ—Ç–∫–∏–π ‚Äú–°–∫–ª–∞–¥‚Äù</h2>
    <div class="row">
      <button class="btn" onclick="buildComposition()">üîÅ –ó—ñ–±—Ä–∞—Ç–∏ —Å–∫–ª–∞–¥</button>
      <button class="btn" onclick="copyEl('composition')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏</button>
    </div>
    <div id="composition" class="out" style="margin-top:8px">‚Äî</div>
  </div>

  <!-- 5. –ñ–£–†–ù–ê–õ / QR / NFC / –ö–≤–∏—Ç–æ–∫ 58 –º–º -->
  <div class="card">
    <h2>üìí –ñ—É—Ä–Ω–∞–ª —Ä–µ—Ü–µ–ø—Ç—ñ–≤ / QR / NFC / –∫–≤–∏—Ç–æ–∫</h2>
    <div class="row">
      <button class="btn" onclick="addLog()">‚ûï –î–æ–¥–∞—Ç–∏ –≤ –∂—É—Ä–Ω–∞–ª</button>
      <button class="btn" onclick="copyCSV('csvLog')">üìã CSV (journal)</button>
    </div>
    <div style="overflow:auto;margin-top:8px">
      <table class="table" id="tblLog">
        <thead>
          <tr>
            <th>#</th>
            <th>–í–∏—Ä—ñ–±</th>
            <th class="dark">–ü–∞—Ä—Ç—ñ—è, –∫–≥</th>
            <th class="dark">–í–∏–ø—É—Å–∫, –∫–≥</th>
            <th class="dark">–°–æ–±—ñ–≤./–∫–≥</th>
            <th>–¶—ñ–Ω–∞ –±–µ–∑ –ü–î–í</th>
            <th>–¶—ñ–Ω–∞ –∑ –ü–î–í</th>
            <th>–ú–∞—Ä–∂–∞, %</th>
            <th>√ó</th>
          </tr>
        </thead>
        <tbody id="bodyLog"></tbody>
      </table>
    </div>
    <div id="csvLog" class="out" style="margin-top:8px">‚Äî</div>

    <div class="grid g2" style="margin-top:12px">
      <div class="box">
        <h3>QR-payload</h3>
        <div class="row">
          <button class="btn" onclick="buildQR()">üß© –ó—ñ–±—Ä–∞—Ç–∏ QR</button>
          <button class="btn" onclick="copyEl('qrOut')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏</button>
        </div>
        <div id="qrOut" class="out">‚Äî</div>

        <h3 style="margin-top:12px">NFC ‚Äî ‚ÄúRECIPE CARD‚Äù</h3>
        <div class="row">
          <div style="flex:1"><label>–ö–æ–Ω—Ç–∞–∫—Ç</label><input id="nfcPhone" type="text" value="+380XXXXXXXXX"></div>
          <div style="flex:1"><label>–†–æ–∑–ª–∏–≤/—Ñ–∞—Å—É–≤–∞–Ω–Ω—è</label><input id="packInfo" type="text" value="–±–∞—Ç–æ–Ω √ò60, –≤–∞–∫—É—É–º"></div>
        </div>
        <div class="row" style="margin-top:6px">
          <button class="btn" onclick="buildNFC()">üß© –ó—ñ–±—Ä–∞—Ç–∏</button>
          <button class="btn" onclick="copyEl('nfcOut')">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏</button>
        </div>
        <div id="nfcOut" class="out">‚Äî</div>
      </div>

      <div class="box">
        <h3>–ö–≤–∏—Ç–æ–∫ 58 –º–º (–∫–∞–ª—å–∫—É–ª—è—Ü—ñ—è)</h3>
        <div class="row">
          <button class="btn" onclick="buildTicket()">üßæ –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏</button>
          <button class="btn" onclick="window.print()">üñ®Ô∏è –î—Ä—É–∫</button>
        </div>
        <div class="ticket" id="ticket" style="margin-top:8px">
          <h4>RECIPE COST TICKET</h4>
          <p><b>–í–∏—Ä—ñ–±:</b> <span id="tProd">‚Äî</span></p>
          <p><b>–ü–∞—Ä—Ç—ñ—è:</b> <span id="tBatch">‚Äî</span> –∫–≥ ¬∑ <b>–í–∏—Ö—ñ–¥:</b> <span id="tOut">‚Äî</span> –∫–≥</p>
          <div class="line"></div>
          <p><b>–°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å/–∫–≥:</b> <span id="tCogs">‚Äî</span> –≥—Ä–Ω</p>
          <p><b>–¶—ñ–Ω–∞ –±–µ–∑ –ü–î–í/–∫–≥:</b> <span id="tNet">‚Äî</span> –≥—Ä–Ω</p>
          <p><b>–¶—ñ–Ω–∞ –∑ –ü–î–í/–∫–≥:</b> <span id="tVat">‚Äî</span> –≥—Ä–Ω</p>
          <p><b>–ú–∞—Ä–∂–∞:</b> <span id="tMargin">‚Äî</span>%</p>
          <div class="line"></div>
          <p><small>–°–∫–ª–∞–¥ (—Å–∫–æ—Ä–æ—á–µ–Ω–æ): <span id="tComp">‚Äî</span></small></p>
        </div>
      </div>
    </div>
  </div>

  <!-- 6. –•–Ü–î –†–û–ë–û–¢–ò + –û–¶–Ü–ù–Æ–í–ê–ù–ù–Ø -->
  <div class="card">
    <h2>ü™ú –•—ñ–¥ —Ä–æ–±–æ—Ç–∏ (45‚Äì70 —Ö–≤)</h2>
    <ol>
      <li>–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–∞—Ä—Ç—ñ—ó (–∫–≥, yield, –Ω–∞–∫–ª–∞–¥–Ω—ñ, –º–∞—Ä–∂—É).</li>
      <li>–î–æ–¥–∞–π—Ç–µ 6‚Äì10 —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ —ñ–∑ % —Ç–∞ —Ü—ñ–Ω–∞–º–∏; –ø–æ–∑–Ω–∞—á—Ç–µ –∞–ª–µ—Ä–≥–µ–Ω–∏.</li>
      <li>–ü–µ—Ä–µ—Ä–∞—Ö—É–Ω–æ–∫ ‚Üí –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å/–∫–≥, —Ü—ñ–Ω—É —Ç–∞ –º–∞—Ä–∂—É.</li>
      <li>–ó–≥–µ–Ω–µ—Ä—É–π—Ç–µ ‚Äú–°–∫–ª–∞–¥‚Äù, QR/NFC, –∫–≤–∏—Ç–æ–∫ —Ç–∞ CSV (recipe/summary/journal).</li>
    </ol>
  </div>

  <div class="card">
    <h2>‚úÖ –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è (10 –±–∞–ª—ñ–≤)</h2>
    <table class="table">
      <thead><tr><th>–ö—Ä–∏—Ç–µ—Ä—ñ–π</th><th>–ë–∞–ª–∏</th></tr></thead>
      <tbody>
        <tr><td>–ü–æ–≤–Ω–∞ —Ä–µ—Ü–µ–ø—Ç—É—Ä–∞ –∑ —Ü—ñ–Ω–∞–º–∏, –∫–æ—Ä–µ–∫—Ç–Ω–∞ —Å—É–º–∞ %</td><td>3</td></tr>
        <tr><td>–°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å/–∫–≥, —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è, –º–∞—Ä–∂–∞</td><td>4</td></tr>
        <tr><td>–°–∫–ª–∞–¥ –∑ –∞–ª–µ—Ä–≥–µ–Ω–∞–º–∏ (–≤–∏–¥—ñ–ª–µ–Ω–Ω—è) + QR/NFC</td><td>2</td></tr>
        <tr><td>–ñ—É—Ä–Ω–∞–ª —ñ CSV</td><td>1</td></tr>
      </tbody>
    </table>
  </div>
</div>

<script>
  // –í–±—É–¥–æ–≤–∞–Ω–∏–π —Ä–µ–∂–∏–º (Moodle iFrame)
  (function(){ if (window.self !== window.top) document.documentElement.classList.add('embedded'); })();

  const byId = id => document.getElementById(id);
  const bodyIngred = byId('bodyIngred');
  const bodyLog = byId('bodyLog');
  const rnd = (n,d=2)=>Number((+n).toFixed(d));
  const pad = (n,w=2)=>String(n).padStart(w,'0');

  // ===== –£—Ç–∏–ª—ñ—Ç–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è / CSV =====
  function copyCSV(id){
    const t = document.getElementById(id).textContent.trim();
    if(!t||t==='‚Äî'){ alert('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è'); return; }
    navigator.clipboard.writeText(t).then(()=>flash('‚úÖ CSV —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'),()=>flash('–ù–µ –≤–¥–∞–ª–æ—Å—è'));
  }
  function copyEl(id){
    const t = byId(id).textContent.trim();
    if(!t||t==='‚Äî'){ alert('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö'); return; }
    navigator.clipboard.writeText(t).then(()=>flash('‚úÖ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'),()=>flash('–ù–µ –≤–¥–∞–ª–æ—Å—è'));
  }
  function flash(msg){ const o=document.title; document.title=msg; setTimeout(()=>document.title=o,900); }

  // ===== –†–æ–±–æ—Ç–∞ –∑ —Ç–∞–±–ª–∏—Ü—è–º–∏ =====
  function reindex(tbody){ [...tbody.querySelectorAll('tr')].forEach((tr,i)=>tr.querySelector('.idx').textContent=i+1); }

  function addIngred(sample){
    const s = Object.assign({name:'', pct:'', price:'', allergen:false}, sample||{});
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td class="idx">1</td>
      <td><input type="text" value="${s.name}"></td>
      <td class="dark"><input type="number" step="0.01" value="${s.pct}"></td>
      <td class="dark"><input type="number" step="0.01" value="${s.price}"></td>
      <td><select>${['–Ω—ñ','—Ç–∞–∫'].map(v=>`<option ${ (s.allergen && v==='—Ç–∞–∫')?'selected':'' }>${v}</option>`).join('')}</select></td>
      <td class="kg">‚Äî</td>
      <td class="cost">‚Äî</td>
      <td><button class="btn" onclick="this.closest('tr').remove(); reindex(bodyIngred); recalc();">‚úñ</button></td>
    `;
    bodyIngred.appendChild(tr); reindex(bodyIngred); recalc();
  }

  function presetRecipe(){
    bodyIngred.innerHTML='';
    addIngred({name:'–°–≤–∏–Ω–∏–Ω–∞', pct:55, price:165});
    addIngred({name:'–Ø–ª–æ–≤–∏—á–∏–Ω–∞', pct:15, price:180});
    addIngred({name:'–í–æ–¥–∞/–ª—ñ–¥', pct:22, price:2});
    addIngred({name:'–°–û–Ñ–í–ò–ô —ñ–∑–æ–ª—è—Ç', pct:3, price:95, allergen:true});
    addIngred({name:'–ö—Ä–æ—Ö–º–∞–ª—å –∫–∞—Ä—Ç–æ–ø–ª—è–Ω–∏–π', pct:3, price:42});
    addIngred({name:'–°—ñ–ª—å –∫—É—Ö–æ–Ω–Ω–∞', pct:1.5, price:20});
    addIngred({name:'–°—É–º—ñ—à –ø—Ä—è–Ω–æ—â—ñ–≤', pct:0.5, price:220});
    recalc();
  }

  // ===== –†–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ =====
  function readRecipe(){
    const batchKg = +byId('batchKg').value||0;
    const rows = [...bodyIngred.querySelectorAll('tr')].map(r=>{
      const name = r.children[1].querySelector('input').value.trim();
      const pct  = Number(r.children[2].querySelector('input').value);
      const price= Number(r.children[3].querySelector('input').value);
      const all  = r.children[4].querySelector('select').value==='—Ç–∞–∫';
      return {tr:r, name, pct, price, all};
    }).filter(x=>x.name && !isNaN(x.pct) && x.pct>=0);
    return {batchKg, rows};
  }

  function recalc(){
    const head = readRecipe();
    const batchKg = head.batchKg;
    const yieldPct = (+byId('yieldPct').value||100)/100;
    let sumPct = 0, rawCost = 0;
    head.rows.forEach(x=>{
      const kg = batchKg * (x.pct/100);
      const cost = kg * (x.price||0);
      x.tr.querySelector('.kg').textContent   = rnd(kg,3);
      x.tr.querySelector('.cost').textContent = rnd(cost,2);
      sumPct += x.pct;
      rawCost += cost;
    });

    // –í–∏—Ö—ñ–¥/–Ω–∞–∫–ª–∞–¥–Ω—ñ
    const outKg = rnd(batchKg * yieldPct, 3);
    const ohFix = +byId('ohFix').value||0;
    const ohPer = +byId('ohPerKg').value||0;
    const ohCost = rnd(ohFix + outKg*ohPer, 2);

    // –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å –Ω–∞ –∫–≥
    const cogsKg = outKg>0 ? rnd((rawCost + ohCost)/outKg, 2) : 0;

    // –¶—ñ–Ω–∏
    const marg = (+byId('targetMargin').value||0)/100;
    const priceNet = rnd(cogsKg * (1 + marg), 2);
    const vat = (+byId('vatPct').value||0)/100;
    const priceVat = rnd(priceNet * (1 + vat), 2);

    // –í–∏–≤—ñ–¥
    byId('sumKg').textContent   = rnd(batchKg,3);
    byId('outKg').textContent   = outKg;
    byId('rawCost').textContent = rnd(rawCost,2);
    byId('ohCost').textContent  = ohCost;
    byId('cogsKg').textContent  = cogsKg;
    byId('margPct').textContent = rnd(marg*100,1);
    byId('priceNet').textContent= priceNet;
    byId('priceVat').textContent= priceVat;

    // CSV
    byId('csvHead').textContent =
      `HEAD|prod=${byId('prodName').value}|batch=${batchKg}kg|yield=${rnd(yieldPct*100,1)}%|oh_fix=${ohFix}UAH|oh_perkg=${ohPer}UAH|margin=${rnd(marg*100,1)}%|vat=${rnd(vat*100,1)}%`;
    byId('csvIngred').textContent =
      head.rows.map((x,i)=> [i+1, x.name, x.pct+'%', x.price+' –≥—Ä–Ω/–∫–≥',
                            x.tr.querySelector('.kg').textContent+' –∫–≥',
                            x.tr.querySelector('.cost').textContent+' –≥—Ä–Ω',
                            x.all?'ALLERGEN':''].join(' | ')
      ).join('\n') || '‚Äî';
    byId('csvSummary').textContent =
      `SUMMARY|sum_in=${rnd(batchKg,3)}kg|out=${outKg}kg|raw=${rnd(rawCost,2)}UAH|oh=${ohCost}UAH|cogs_perkg=${cogsKg}UAH|price_net=${priceNet}UAH|price_vat=${priceVat}UAH|margin=${rnd(marg*100,1)}%`;

    // –û–Ω–æ–≤–∏—Ç–∏ –∫–≤–∏—Ç–æ–∫
    byId('tProd').textContent  = byId('prodName').value;
    byId('tBatch').textContent = rnd(batchKg,3);
    byId('tOut').textContent   = outKg;
    byId('tCogs').textContent  = cogsKg;
    byId('tNet').textContent   = priceNet;
    byId('tVat').textContent   = priceVat;
    buildComposition(); // –æ–Ω–æ–≤–∏—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–∫–ª–∞–¥
  }

  // –°–∫–ª–∞–¥ –∑ –∞–ª–µ—Ä–≥–µ–Ω–∞–º–∏ (–≤–µ—Ä—Ö–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä)
  function buildComposition(){
    const head = readRecipe();
    const list = head.rows
      .filter(x=>x.pct>0)
      .sort((a,b)=>b.pct-a.pct)
      .map(x=> (x.all? x.name.toUpperCase(): x.name) + ` (${rnd(x.pct,2)}%)`);
    const text = list.length ? `–°–∫–ª–∞–¥: ${list.join(', ')}.` : '‚Äî';
    byId('composition').textContent = text;
    byId('tComp').textContent = (text.length>90? text.slice(0,87)+'‚Ä¶': text);
    return text;
  }

  // –ñ—É—Ä–Ω–∞–ª
  function reindexLog(){ [...bodyLog.querySelectorAll('tr')].forEach((tr,i)=>tr.querySelector('.idx').textContent=i+1); }
  function addLog(sample){
    recalc();
    const s = Object.assign({
      prod: byId('prodName').value,
      batch: byId('batchKg').value,
      out: byId('outKg').textContent,
      cogs: byId('cogsKg').textContent,
      net: byId('priceNet').textContent,
      vat: byId('priceVat').textContent,
      marg: byId('margPct').textContent
    }, sample||{});
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td class="idx">1</td>
      <td><input type="text" value="${s.prod}"></td>
      <td class="dark">${s.batch}</td>
      <td class="dark">${s.out}</td>
      <td class="dark">${s.cogs}</td>
      <td>${s.net}</td>
      <td>${s.vat}</td>
      <td>${s.marg}</td>
      <td><button class="btn" onclick="this.closest('tr').remove(); reindexLog(); buildLogCSV();">‚úñ</button></td>
    `;
    bodyLog.appendChild(tr); reindexLog(); buildLogCSV();
  }
  function buildLogCSV(){
    const rows = [...bodyLog.querySelectorAll('tr')].map(r=>{
      const idx=r.querySelector('.idx').textContent.trim();
      const prod=r.children[1].querySelector('input').value.trim();
      const batch=r.children[2].textContent.trim();
      const out=r.children[3].textContent.trim();
      const cogs=r.children[4].textContent.trim();
      const net=r.children[5].textContent.trim();
      const vat=r.children[6].textContent.trim();
      const marg=r.children[7].textContent.trim();
      return [idx,prod,batch,out,cogs,net,vat,marg].join(' | ');
    });
    byId('csvLog').textContent = rows.join('\n') || '‚Äî';
  }

  // QR —Ç–∞ NFC
  function buildQR(){
    const payload = {
      prod: byId('prodName').value,
      batch_kg: +byId('batchKg').value||0,
      yield_pct: +byId('yieldPct').value||0,
      out_kg: byId('outKg').textContent,
      cogs_perkg: byId('cogsKg').textContent,
      price_net: byId('priceNet').textContent,
      price_vat: byId('priceVat').textContent
    };
    byId('qrOut').textContent = JSON.stringify(payload);
  }
  function buildNFC(){
    const txt = [
      `RECIPE_NFC`,
      `PROD:${byId('prodName').value}`,
      `BATCH:${byId('batchKg').value}kg OUT:${byId('outKg').textContent}kg`,
      `COGS:${byId('cogsKg').textContent}UAH/kg NET:${byId('priceNet').textContent}UAH/kg VAT:${byId('priceVat').textContent}UAH/kg`,
      `PACK:${byId('packInfo').value}`,
      `CONTACT:${byId('nfcPhone').value}`,
      `STAMP:${new Date().toISOString().slice(0,19).replace('T',' ')}`
    ].join('\n');
    byId('nfcOut').textContent = txt;
  }

  // –ö–≤–∏—Ç–æ–∫
  function buildTicket(){
    window.scrollTo({top: document.getElementById('ticket').getBoundingClientRect().top + window.scrollY - 60, behavior:'smooth'});
  }

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
  (function init(){
    recalc();
    document.addEventListener('change', e=>{
      if(e.target.matches('input,select,textarea')) recalc();
    });
  })();
</script>
</body>
</html>
