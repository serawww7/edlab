<!-- –ü–ê–†–ê 5 (–∞—É–¥–∏—Ç–æ—Ä–Ω–æ) –¥–ª—è –∞–≥—Ä–æ–Ω–æ–º—ñ–≤
     –¢–µ–º–∞: –¢–ï–•–ö–ê–†–¢–ê –û–ë–ü–†–ò–°–ö–£–í–ê–ù–ù–Ø ‚Äî –Ω–æ—Ä–º–∏, –±–∞–∫–∏, –ø–æ—Ñ–æ—Ä—Å—É–Ω–∫–æ–≤–∏–π –≤–∏—Ç—Ä–∞—Ç, —á–µ–∫-–∑–∞–≤–¥–∞–Ω–Ω—è 58 –º–º
     –§–æ–∫—É—Å: —Ä–æ–±–æ—Ç–∞ –≤ –∫–æ–ª–µ–¥–∂—ñ, –º–∞–∫—Å–∏–º—É–º —Ç–µ–ª–µ—Ñ–æ–Ω—É/–ü–ö + —Ç–µ—Ä–º–æ–ø—Ä–∏–Ω—Ç–µ—Ä 58 –º–º (–æ–ø—Ü—ñ–π–Ω–æ).
     –£—Å–µ –ª–æ–∫–∞–ª—å–Ω–æ, –±–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫. –ì–æ—Ç–æ–≤–æ –¥–ª—è GitHub Pages / iFrame —É Moodle. -->
<!DOCTYPE html>
<html lang="uk">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>–ü–∞—Ä–∞ 5 ‚Äî –¢–µ—Ö–∫–∞—Ä—Ç–∞ –æ–±–ø—Ä–∏—Å–∫—É–≤–∞–Ω–Ω—è: –Ω–æ—Ä–º–∏, –±–∞–∫–∏, –ø–æ—Ñ–æ—Ä—Å—É–Ω–∫–æ–≤–æ, —á–µ–∫ 58 –º–º</title>
<meta name="color-scheme" content="light dark">
<style>
  :root{
    --bg:#0b1220; --card:#0f172a; --muted:#94a3b8; --text:#e2e8f0;
    --accent:#22c55e; --accent-2:#60a5fa; --warn:#f59e0b; --good:#10b981; --bad:#ef4444; --line:#1f2937;
  }
  *{box-sizing:border-box}
  body{
    margin:0; background:linear-gradient(180deg,#0b1220,#111827 30%,#0b1220);
    color:var(--text); font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,"Helvetica Neue",Arial,sans-serif; line-height:1.55
  }
  .wrap{max-width:1080px; margin:0 auto; padding:24px 16px 64px}
  .badge{display:inline-block; padding:6px 10px; border:1px solid var(--line); background:#0b1220; border-radius:999px; font-size:12px; color:var(--muted); letter-spacing:.3px}
  h1{font-size:34px; margin:6px 0 12px; line-height:1.15;
     background:linear-gradient(90deg,#60a5fa,#22c55e); -webkit-background-clip:text; -webkit-text-fill-color:transparent}
  h2{font-size:22px; margin:28px 0 12px}
  h3{font-size:18px; margin:20px 0 8px; color:#cbd5e1}
  p{margin:10px 0}
  .card{background:linear-gradient(180deg,#0f172a,#0b1220); border:1px solid var(--line); border-radius:16px; padding:16px; margin:12px 0; box-shadow:0 6px 24px rgba(0,0,0,.25)}
  .grid{display:grid; gap:12px}
  .g2{grid-template-columns:repeat(2,minmax(0,1fr))}
  .g3{grid-template-columns:repeat(3,minmax(0,1fr))}
  @media (max-width:980px){.g2,.g3{grid-template-columns:1fr}}
  .kpi{display:flex; align-items:center; gap:10px; padding:10px 12px; border:1px dashed #263042; border-radius:12px}
  .kpi b{font-size:14px}
  .mono,code{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}
  .table{width:100%; border-collapse:separate; border-spacing:0; overflow:auto; border-radius:12px; border:1px solid #223049}
  .table th,.table td{padding:8px 10px; border-bottom:1px solid #1f2937; font-size:14px; vertical-align:top}
  .table thead th{background:#0c1629; color:#a5b4fc; text-align:left; position:sticky; top:0}
  .step{display:flex; gap:12px; align-items:flex-start; padding:10px 12px; border:1px solid #1f2937; border-radius:12px; background:#0b1324; margin:8px 0}
  .step .n{min-width:30px; height:30px; border-radius:8px; background:#0e1a2e; display:grid; place-items:center; color:#a5b4fc; font-weight:700}
  .pill{display:inline-block; padding:4px 10px; border:1px solid #223049; border-radius:999px; font-size:12px; color:#a5b4fc; background:#0d1a2e; margin-right:6px}
  .btn{display:inline-block; padding:10px 14px; border-radius:10px; border:1px solid #223049; background:#0d1a2e; color:#dbeafe; text-decoration:none; cursor:pointer}
  .btn:hover{background:#0f1f39}
  .muted{color:#93a3b5}
  .small{font-size:12px; color:#9fb0c8}
  .row{display:flex; gap:10px; flex-wrap:wrap}
  .box{border:1px solid #223049; border-radius:12px; padding:12px; background:#0b1324}
  .ok{color:var(--good)} .warn{color:var(--warn)} .bad{color:var(--bad)}
  .field{display:flex; gap:8px; margin:6px 0; align-items:center}
  .field label{min-width:200px; color:#cbd5e1}
  .field input, .field select{
    flex:1; padding:8px 10px; border-radius:10px; border:1px solid #223049; background:#0d1a2e; color:#e5e7eb
  }
  .out{background:#0b1324; border:1px dashed #263042; padding:10px 12px; border-radius:10px; word-break:break-all}

  /* –ë–ª–æ–∫ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó 58 –º–º */
  .ticket-wrap{display:grid; gap:16px; grid-template-columns:1fr 1fr}
  @media (max-width:980px){.ticket-wrap{grid-template-columns:1fr}}
  .ticket{
    width:58mm; background:#fff; color:#000; padding:6mm 4mm; border-radius:6px;
    box-shadow:0 0 0 1px #e5e7eb inset; font-family:"Courier New",ui-monospace,monospace;
  }
  .ticket h4{margin:0 0 6px; font-size:13px; text-align:center}
  .ticket p{margin:2px 0; font-size:12px}
  .ticket .center{text-align:center}
  .ticket .line{border-top:1px dashed #111; margin:6px 0}
  .ticket small{font-size:10px}

  /* –í–±—É–¥–æ–≤–∞–Ω–æ (iframe) ‚Üí —Å—Ç—Ä–∏–º–∞–Ω–∏–π –≤–∏–≥–ª—è–¥ */
  html.embedded body{background:#fff; color:#111}
  html.embedded .card{background:#fff; border:1px solid #e5e7eb; box-shadow:none}
  html.embedded h1{-webkit-text-fill-color:initial; background:none; color:#111}
  html.embedded .btn{background:#111827; color:#fff; border-color:#111827}

  @media print{
    @page{ size:58mm auto; margin:4mm }
    body{ background:#fff; color:#000 }
    .no-print{ display:none !important }
    .ticket{ box-shadow:none; width:auto; padding:0 }
  }
</style>
</head>
<body>
  <div class="wrap">
    <span class="badge">–ü–∞—Ä–∞ 5 ¬∑ –∞—É–¥–∏—Ç–æ—Ä–Ω–æ ¬∑ –∞–≥—Ä–æ–Ω–æ–º–∏</span>
    <h1>üöú –¢–µ—Ö–∫–∞—Ä—Ç–∞ –æ–±–ø—Ä–∏—Å–∫—É–≤–∞–Ω–Ω—è: –Ω–æ—Ä–º–∏, –±–∞–∫–∏, –ø–æ—Ñ–æ—Ä—Å—É–Ω–∫–æ–≤–∏–π –≤–∏—Ç—Ä–∞—Ç + —á–µ–∫ 58 –º–º</h1>

    <div class="card">
      <h2>üéØ –ú–µ—Ç–∞</h2>
      <p>
        –ó–∞ –ø–∞—Ä—É —Å—Ç—É–¥–µ–Ω—Ç —Ñ–æ—Ä–º—É—î <b>–ø–æ–≤–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –æ–±–ø—Ä–∏—Å–∫—É–≤–∞–Ω–Ω—è</b> –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è: –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º—ñ—à, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–∫—ñ–≤,
        <b>–ø–æ—Ñ–æ—Ä—Å—É–Ω–∫–æ–≤–∏–π –≤–∏—Ç—Ä–∞—Ç (L/—Ö–≤)</b> –∑–∞ —à–∏—Ä–∏–Ω–æ—é/–∫—Ä–æ–∫–æ–º, —Ä–æ–∑–∫–ª–∞–¥–∫–∞ –ø–æ –±–∞–∫–∞—Ö, —ñ –¥—Ä—É–∫—É—î <b>—á–µ–∫-–∑–∞–≤–¥–∞–Ω–Ω—è 58 –º–º</b> –¥–ª—è –º–µ—Ö–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞.
      </p>
      <div class="grid g3">
        <div class="kpi"><span>üìê</span><div><b>–§–æ—Ä–º—É–ª–∏</b><br/><span class="mono">q_—Ñ–æ—Ä—Å = (–ù–≤ * V * S) / 600</span></div></div>
        <div class="kpi"><span>üß™</span><div><b>–°—É–º—ñ—à</b><br/>–≤–æ–¥–∞ + –ø—Ä–æ–¥—É–∫—Ç(–∏), –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–∫—ñ–≤</div></div>
        <div class="kpi"><span>üñ®Ô∏è</span><div><b>–ß–µ–∫ 58 –º–º</b><br/>¬´–ó–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ –∑–º—ñ–Ω—É¬ª</div></div>
      </div>
      <p class="small">–î–µ: –ù–≤ ‚Äî –Ω–æ—Ä–º–∞ –≤–∏–ª–∏–≤—É (–ª/–≥–∞), V ‚Äî —à–≤–∏–¥–∫—ñ—Å—Ç—å (–∫–º/–≥–æ–¥), S ‚Äî –º—ñ–∂—Ñ–æ—Ä—Å—É–Ω–∫–æ–≤–∞ –≤—ñ–¥—Å—Ç–∞–Ω—å (–º), 600 ‚Äî –∫–æ–µ—Ñ. –ø–µ—Ä–µ—Ä–∞—Ö—É–Ω–∫—É.</p>
    </div>

    <!-- –í–•–Ü–î–ù–Ü –ü–ê–†–ê–ú–ï–¢–†–ò -->
    <div class="card">
      <h2>üß∞ –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ</h2>
      <div class="grid g2">
        <div class="box">
          <h3>–ü–æ–ª–µ —Ç–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç</h3>
          <div class="field"><label for="fieldCode">–ö–æ–¥ –ø–æ–ª—è</label><input id="fieldCode" type="text" value="F-01" /></div>
          <div class="field"><label for="area">–ü–ª–æ—â–∞, –≥–∞</label><input id="area" type="number" step="0.01" value="25" /></div>
          <div class="field"><label for="product">–ü—Ä–æ–¥—É–∫—Ç (–Ω–∞–∑–≤–∞)</label><input id="product" type="text" value="–ì–µ—Ä–±—ñ—Ü–∏–¥ –•" /></div>
          <div class="field"><label for="dose">–î–æ–∑–∞ –ø—Ä–æ–¥—É–∫—Ç—É, –ª/–≥–∞</label><input id="dose" type="number" step="0.01" value="0.8" /></div>
          <div class="field"><label for="waterRate">–ù–æ—Ä–º–∞ –≤–∏–ª–∏–≤—É (–≤–æ–¥–∞), –ª/–≥–∞</label><input id="waterRate" type="number" step="0.1" value="200" /></div>
        </div>
        <div class="box">
          <h3>–û–±–ø—Ä–∏—Å–∫—É–≤–∞—á</h3>
          <div class="field"><label for="boomWidth">–®–∏—Ä–∏–Ω–∞ —à—Ç–∞–Ω–≥–∏, –º</label><input id="boomWidth" type="number" step="0.1" value="18" /></div>
          <div class="field"><label for="spacing">–ö—Ä–æ–∫ —Ñ–æ—Ä—Å—É–Ω–æ–∫ (S), –º</label><input id="spacing" type="number" step="0.01" value="0.5" /></div>
          <div class="field"><label for="speed">–†–æ–±–æ—á–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å (V), –∫–º/–≥–æ–¥</label><input id="speed" type="number" step="0.1" value="7.0" /></div>
          <div class="field"><label for="tank">–û–± º—î–º –±–∞–∫–∞, –ª</label><input id="tank" type="number" step="1" value="3000" /></div>
        </div>
      </div>
      <div class="row" style="margin-top:8px">
        <button class="btn" type="button" onclick="calcAll()">üîÅ –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏</button>
        <button class="btn" type="button" onclick="fillDemo()">üß™ –ü—Ä–∏–∫–ª–∞–¥</button>
      </div>
    </div>

    <!-- –ü–Ü–î–°–£–ú–ö–ò -->
    <div class="card">
      <h2>üìä –ü—ñ–¥—Å—É–º–æ–∫ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤</h2>
      <div class="grid g3">
        <div class="box">
          <h3>–ó–∞–≥–∞–ª—å–Ω–µ</h3>
          <p><b>–ü–ª–æ—â–∞:</b> <span id="o_area">‚Äî</span> –≥–∞</p>
          <p><b>–°—É–º—ñ—à –≤—Å—å–æ–≥–æ:</b> <span id="o_mix">‚Äî</span> –ª (–≤–æ–¥–∞ + –ø—Ä–æ–¥—É–∫—Ç)</p>
          <p><b>–í–æ–¥–∞ –≤—Å—å–æ–≥–æ:</b> <span id="o_water">‚Äî</span> –ª</p>
          <p><b>–ü—Ä–æ–¥—É–∫—Ç –≤—Å—å–æ–≥–æ:</b> <span id="o_prod">‚Äî</span> –ª</p>
          <p><b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–∫—ñ–≤:</b> <span id="o_tanks">‚Äî</span> —à—Ç</p>
        </div>
        <div class="box">
          <h3>–ü–æ—Ñ–æ—Ä—Å—É–Ω–∫–æ–≤–æ</h3>
          <p><b>–ö-—Å—Ç—å —Ñ–æ—Ä—Å—É–Ω–æ–∫:</b> <span id="o_nozzles">‚Äî</span> —à—Ç</p>
          <p><b>–í–∏—Ç—Ä–∞—Ç–∞ –Ω–∞ —Ñ–æ—Ä—Å—É–Ω–∫—É q</b> = <span id="o_q">‚Äî</span> –ª/—Ö–≤</p>
          <p class="small">–§–æ—Ä–º—É–ª–∞: q = (–ù–≤ ¬∑ V ¬∑ S) / 600</p>
        </div>
        <div class="box">
          <h3>–ü–ª–∞–Ω –∑–∞ –±–∞–∫–∞–º–∏</h3>
          <div id="tankPlan" class="out">‚Äî</div>
          <p class="small">–ó–∞–ª–∏—à–æ–∫ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –±–∞–∫–∞ –≤—Ä–∞—Ö–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.</p>
        </div>
      </div>
    </div>

    <!-- –¢–ê–ë–õ–ò–¶–Ø –ü–õ–ê–ù–£ –ü–û –ë–ê–ö–ê–• -->
    <div class="card">
      <h2>üß± –¢–∞–±–ª–∏—Ü—è ¬´–ë–∞–∫–∏¬ª</h2>
      <div style="overflow:auto">
        <table class="table" id="tanksTable">
          <thead>
            <tr>
              <th>#</th>
              <th>–ó–∞–ø—Ä–∞–≤–∏—Ç–∏, –ª (–≤–æ–¥–∞)</th>
              <th>–î–æ–¥–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç, –ª</th>
              <th>–ü–æ–∫—Ä–∏–≤–∞—î, –≥–∞</th>
              <th>–ö–æ–º–µ–Ω—Ç–∞—Ä</th>
            </tr>
          </thead>
          <tbody id="tanksBody"><tr><td colspan="5">‚Äî</td></tr></tbody>
        </table>
      </div>
      <div class="row" style="margin-top:8px">
        <button class="btn" type="button" onclick="copyTanks()">üìã –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —è–∫ CSV</button>
      </div>
      <div id="csvTanks" class="out" style="margin-top:8px">‚Äî</div>
    </div>

    <!-- –ß–ï–ö-–ó–ê–í–î–ê–ù–ù–Ø 58 –ú–ú -->
    <div class="card">
      <h2>üßæ –ß–µ–∫-–∑–∞–≤–¥–∞–Ω–Ω—è 58 –º–º (–¥–ª—è –º–µ—Ö–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞)</h2>
      <div class="ticket-wrap">
        <div class="box">
          <div class="row">
            <button class="btn" type="button" onclick="buildTicket()">üß© –ó—ñ–±—Ä–∞—Ç–∏ —á–µ–∫</button>
            <button class="btn" type="button" onclick="window.print()">üñ®Ô∏è –î—Ä—É–∫ 58 –º–º</button>
            <button class="btn" type="button" onclick="downloadTXT()">üì• –ó–±–µ—Ä–µ–≥—Ç–∏ —è–∫ TXT</button>
          </div>
          <p class="small muted">–ü–æ—Ä–∞–¥–∞: —É –¥—ñ–∞–ª–æ–∑—ñ –¥—Ä—É–∫—É –≤—Å—Ç–∞–Ω–æ–≤–∏ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –ø–æ–ª—è, —è–∫—â–æ –æ–±—Ä—ñ–∑–∞—î —Ç–µ–∫—Å—Ç.</p>
        </div>
        <div>
          <div id="ticket" class="ticket" aria-live="polite">
            <h4>–ó–ê–í–î–ê–ù–ù–Ø ‚Äî –û–ë–ü–†–ò–°–ö–£–í–ê–ù–ù–Ø</h4>
            <p class="center"><small id="t-date">–î–∞—Ç–∞: ‚Äî</small></p>
            <div class="line"></div>
            <p><b>–ü–æ–ª–µ:</b> <span id="t-field">‚Äî</span> ¬∑ <b>–ü–ª–æ—â–∞:</b> <span id="t-area">‚Äî</span> –≥–∞</p>
            <p><b>–ü—Ä–æ–¥—É–∫—Ç:</b> <span id="t-prod">‚Äî</span> ¬∑ <b>–î–æ–∑–∞:</b> <span id="t-dose">‚Äî</span> –ª/–≥–∞</p>
            <p><b>–ù–æ—Ä–º–∞ –≤–∏–ª–∏–≤—É:</b> <span id="t-waterRate">‚Äî</span> –ª/–≥–∞</p>
            <p><b>–®–∏—Ä–∏–Ω–∞:</b> <span id="t-width">‚Äî</span> –º ¬∑ <b>–ö—Ä–æ–∫:</b> <span id="t-spacing">‚Äî</span> –º</p>
            <p><b>–®–≤–∏–¥–∫—ñ—Å—Ç—å:</b> <span id="t-speed">‚Äî</span> –∫–º/–≥–æ–¥</p>
            <div class="line"></div>
            <p><b>–§–æ—Ä—Å—É–Ω–æ–∫:</b> <span id="t-nozzles">‚Äî</span> ¬∑ <b>q (–ª/—Ö–≤):</b> <span id="t-q">‚Äî</span></p>
            <p><b>–ë–∞–∫–∏:</b> <span id="t-tanks">‚Äî</span> —à—Ç ¬∑ <b>–ó–∞ –±–∞–∫:</b> –≤–æ–¥–∞ <span id="t-tankWater">‚Äî</span> –ª + –ø—Ä–æ–¥—É–∫—Ç <span id="t-tankProd">‚Äî</span> –ª</p>
            <div class="line"></div>
            <p><small id="t-ref">Ref: ‚Äî</small></p>
            <p class="center"><small>–ü—ñ–¥–ø–∏—Å –º–µ—Ö–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞: __________</small></p>
          </div>
        </div>
      </div>
    </div>

    <!-- –•–Ü–î –†–û–ë–û–¢–ò -->
    <div class="card">
      <h2>ü™ú –•—ñ–¥ —Ä–æ–±–æ—Ç–∏ (45‚Äì70 —Ö–≤)</h2>
      <div class="step"><div class="n">1</div><div><b>–í–≤—ñ–¥ –≤–∏—Ö—ñ–¥–Ω–∏—Ö</b> (5‚Äì7 —Ö–≤): –ø–æ–ª–µ, –ø–ª–æ—â–∞, –ø—Ä–æ–¥—É–∫—Ç, –¥–æ–∑–∞, –Ω–æ—Ä–º–∞ –≤–∏–ª–∏–≤—É, –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –æ–±–ø—Ä–∏—Å–∫—É–≤–∞—á–∞.</div></div>
      <div class="step"><div class="n">2</div><div><b>–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫</b> (2 —Ö–≤): –∫–Ω–æ–ø–∫–∞ ¬´–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏¬ª ‚Üí –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø–æ—Ñ–æ—Ä—Å—É–Ω–∫–æ–≤–∏–π –≤–∏—Ç—Ä–∞—Ç, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–∫—ñ–≤, —Å—É–º—ñ—à—ñ.</div></div>
      <div class="step"><div class="n">3</div><div><b>–ü–ª–∞–Ω –∑–∞ –±–∞–∫–∞–º–∏</b> (10‚Äì15 —Ö–≤): –æ–±–≥–æ–≤–æ—Ä–∏—Ç–∏ –ª–æ–≥—ñ–∫—É –∑–∞–ø—Ä–∞–≤–æ–∫, –Ω–µ—Ä—ñ–≤–Ω–∏–π –æ—Å—Ç–∞–Ω–Ω—ñ–π –±–∞–∫, –±–µ–∑–ø–µ–∫—É –∑–º—ñ—à—É–≤–∞–Ω–Ω—è.</div></div>
      <div class="step"><div class="n">4</div><div><b>–ß–µ–∫-–∑–∞–≤–¥–∞–Ω–Ω—è</b> (5 —Ö–≤): –∑—ñ–±—Ä–∞—Ç–∏, –Ω–∞–¥—Ä—É–∫—É–≤–∞—Ç–∏ 58 –º–º –∞–±–æ –∑–±–µ—Ä–µ–≥—Ç–∏ TXT.</div></div>
      <div class="step"><div class="n">5</div><div><b>–ó–∞–ø–∏—Å —É Sheets</b> (10 —Ö–≤): –≤—Å—Ç–∞–≤–∏—Ç–∏ CSV –ø–ª–∞–Ω—É ¬´–ë–∞–∫–∏¬ª, –ø–æ–±—É–¥—É–≤–∞—Ç–∏ —Å—Ç–æ–≤–ø—á–∏–∫–æ–≤—É –¥—ñ–∞–≥—Ä–∞–º—É ¬´–ª/–±–∞–∫¬ª.</div></div>
      <div class="step"><div class="n">6</div><div><b>–ü—ñ–¥—Å—É–º–æ–∫</b> (3‚Äì5 —Ö–≤): —â–æ –≤–ø–ª–∏–≤–∞—î –Ω–∞ q, —è–∫ –∑–º—ñ–Ω–∏—Ç—å—Å—è –ø—Ä–∏ V¬±1 –∫–º/–≥–æ–¥, S¬±0.1 –º, –ù–≤¬±20 –ª/–≥–∞.</div></div>
    </div>

    <!-- –û–¶–Ü–ù–Æ–í–ê–ù–ù–Ø -->
    <div class="card">
      <h2>‚úÖ –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è (10 –±–∞–ª—ñ–≤)</h2>
      <table class="table">
        <thead><tr><th>–ö—Ä–∏—Ç–µ—Ä—ñ–π</th><th>–ë–∞–ª–∏</th></tr></thead>
        <tbody>
          <tr><td>–ö–æ—Ä–µ–∫—Ç–Ω—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Å—É–º—ñ—à—ñ, –±–∞–∫—ñ–≤, q (–ª/—Ö–≤) –ø—Ä–∏ –∑–∞–¥–∞–Ω–∏—Ö V,S,–ù–≤</td><td>4</td></tr>
          <tr><td>CSV ¬´–ë–∞–∫–∏¬ª –≤—Å—Ç–∞–≤–ª–µ–Ω–æ —É Sheets + –¥—ñ–∞–≥—Ä–∞–º–∞</td><td>3</td></tr>
          <tr><td>–ß–µ–∫-–∑–∞–≤–¥–∞–Ω–Ω—è –∑—ñ–±—Ä–∞–Ω–æ —Ç–∞ —Ä–æ–∑–¥—Ä—É–∫–æ–≤–∞–Ω–æ / –∑–±–µ—Ä–µ–∂–µ–Ω–æ TXT</td><td>2</td></tr>
          <tr><td>–ö–æ—Ä–æ—Ç–∫–∏–π —É—Å–Ω–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫ –ø—Ä–æ –≤–ø–ª–∏–≤ V/S/–ù–≤</td><td>1</td></tr>
        </tbody>
      </table>
      <p class="pill">üß™ –ù–æ—Ä–º–∏</p><p class="pill">üßØ –ë–µ–∑–ø–µ–∫–∞ –∑–º—ñ—à—É–≤–∞–Ω–Ω—è</p><p class="pill">üñ®Ô∏è –ß–µ–∫ –¥–ª—è –∑–º—ñ–Ω–∏</p>
    </div>
  </div>

<script>
  // –°—Ç—Ä–∏–º–∞–Ω–∏–π –≤–∏–≥–ª—è–¥ —É –≤–±—É–¥—É–≤–∞–Ω–Ω—ñ
  (function(){ if (window.self !== window.top) document.documentElement.classList.add('embedded'); })();

  function round(n, d=2){ return Number((+n).toFixed(d)); }
  function ceil(n){ return Math.ceil(n); }

  function calcAll(){
    const fieldCode = get('fieldCode'), area = num('area');
    const product = get('product'), dose = num('dose');
    const waterRate = num('waterRate');
    const boomWidth = num('boomWidth'), spacing = num('spacing');
    const speed = num('speed'), tank = num('tank');

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ
    if(area<=0||waterRate<=0||dose<0||boomWidth<=0||spacing<=0||speed<=0||tank<=0){
      alert('–ü–µ—Ä–µ–≤—ñ—Ä –≤—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ: –∂–æ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –Ω—É–ª—å/–≤—ñ–¥ º—î–º–Ω–µ.'); return;
    }

    // –ó–∞–≥–∞–ª—å–Ω—ñ
    const totalWater = area * waterRate;               // –ª
    const totalProd  = area * dose;                    // –ª
    const totalMix   = totalWater + totalProd;         // –ª

    // –§–æ—Ä—Å—É–Ω–∫–∏/–≤–∏—Ç—Ä–∞—Ç–∏
    const nozzles = Math.round(boomWidth / spacing);   // —à—Ç (–æ–∫—Ä—É–≥–ª –¥–æ –Ω–∞–π–±–ª–∏–∂—á–æ–≥–æ)
    const qPerNozzle = (waterRate * speed * spacing) / 600; // –ª/—Ö–≤

    // –ë–∞–∫–∏
    const tankCount = Math.max(1, ceil(totalMix / tank));
    const areaPerTank = tank / waterRate;              // –≥–∞, —â–æ –ø–æ–∫—Ä–∏–≤–∞—î –ø–æ–≤–Ω–∏–π –±–∞–∫
    const fullTanks = Math.max(0, Math.floor(totalMix / tank)); // –ø–æ–≤–Ω—ñ –±–∞–∫–∏
    const lastTankMix = totalMix - fullTanks * tank;   // –ª —É –æ—Å—Ç–∞–Ω–Ω—å–æ–º—É
    const lastTankWater = Math.max(0, lastTankMix * (totalWater/totalMix) ); // –ø—Ä–æ–ø–æ—Ä—Ü—ñ–π–Ω–æ
    const lastTankProd  = Math.max(0, lastTankMix * (totalProd/totalMix) );

    // –í–∏–≤—ñ–¥ –ø—ñ–¥—Å—É–º–∫—ñ–≤
    byId('o_area').textContent = round(area,2);
    byId('o_water').textContent = Math.round(totalWater);
    byId('o_prod').textContent  = round(totalProd,2);
    byId('o_mix').textContent   = Math.round(totalMix);
    byId('o_tanks').textContent = tankCount;
    byId('o_nozzles').textContent = nozzles;
    byId('o_q').textContent = round(qPerNozzle,2);

    // –ü–ª–∞–Ω –∑–∞ –±–∞–∫–∞–º–∏ (—Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—Ç–∫–∏–π)
    const planLines = [];
    for(let i=1;i<=tankCount;i++){
      const isLast = (i===tankCount);
      const mix = isLast ? (lastTankMix || tank) : tank; // —è–∫—â–æ –¥—ñ–ª–∏—Ç—å—Å—è —Ä—ñ–≤–Ω–æ ‚Äî last = tank
      const water = mix * (totalWater/totalMix);
      const prod  = mix * (totalProd/totalMix);
      const ha = mix / waterRate;
      planLines.push(`#${i}: –≤–æ–¥–∞ ${Math.round(water)} –ª + –ø—Ä–æ–¥—É–∫—Ç ${round(prod,2)} –ª ‚Üí ‚âà ${round(ha,2)} –≥–∞`);
    }
    byId('tankPlan').textContent = planLines.join('\n');

    // –¢–∞–±–ª–∏—Ü—è ¬´–ë–∞–∫–∏¬ª
    const tb = byId('tanksBody');
    tb.innerHTML = '';
    for(let i=1;i<=tankCount;i++){
      const isLast = (i===tankCount);
      const mix = isLast ? (lastTankMix || tank) : tank;
      const water = mix * (totalWater/totalMix);
      const prod  = mix * (totalProd/totalMix);
      const ha = mix / waterRate;
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${i}</td>
        <td>${Math.round(water)}</td>
        <td>${round(prod,2)}</td>
        <td>${round(ha,2)}</td>
        <td>${isLast && (mix!==tank) ? '–ù–µ–ø–æ–≤–Ω–∏–π –±–∞–∫' : '‚Äî'}</td>
      `;
      tb.appendChild(tr);
    }

    // –û–Ω–æ–≤–∏—Ç–∏ —á–µ–∫ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É (–±–µ–∑ –¥—Ä—É–∫—É)
    buildTicket();
  }

  function fillDemo(){
    set('fieldCode','F-03'); set('area',32);
    set('product','–§—É–Ω–≥—ñ—Ü–∏–¥ Y'); set('dose',0.6);
    set('waterRate',220);
    set('boomWidth',21); set('spacing',0.5);
    set('speed',7.5); set('tank',3000);
    calcAll();
  }

  function copyTanks(){
    const rows = [...byId('tanksBody').querySelectorAll('tr')].map(tr=>{
      return [...tr.children].map(td=>td.textContent).join(' | ');
    });
    const txt = rows.join('\n');
    byId('csvTanks').textContent = txt || '‚Äî';
    if(txt) navigator.clipboard.writeText(txt).then(()=>flash('‚úÖ CSV —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'),()=>flash('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏'));
  }

  // –ß–ï–ö 58 –º–º
  function buildTicket(){
    const fieldCode = get('fieldCode'), area = num('area');
    const product = get('product'), dose = num('dose');
    const waterRate = num('waterRate');
    const boomWidth = num('boomWidth'), spacing = num('spacing');
    const speed = num('speed'), tank = num('tank');

    const totalWater = area * waterRate;
    const totalProd  = area * dose;
    const totalMix   = totalWater + totalProd;

    const nozzles = Math.round(boomWidth / spacing);
    const qPerNozzle = (waterRate * speed * spacing) / 600;

    const tankCount = Math.max(1, Math.ceil(totalMix / tank));
    const mixPerTank = Math.min(tank, totalMix); // –¥–ª—è —á–µ–∫–∞ ¬´—Ç–∏–ø–æ–≤–∏–π –±–∞–∫¬ª
    const waterPerTank = mixPerTank * (totalWater/totalMix);
    const prodPerTank  = mixPerTank * (totalProd/totalMix);

    // –¥–∞—Ç–∏/—Ä–µ—Ñ
    const now = new Date();
    const pad = n => n.toString().padStart(2,'0');
    const stamp = `${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())} ${pad(now.getHours())}:${pad(now.getMinutes())}`;
    byId('t-date').textContent = `–î–∞—Ç–∞: ${stamp}`;

    byId('t-field').textContent = fieldCode;
    byId('t-area').textContent = round(area,2);
    byId('t-prod').textContent = product;
    byId('t-dose').textContent = round(dose,2);
    byId('t-waterRate').textContent = round(waterRate,1);
    byId('t-width').textContent = round(boomWidth,1);
    byId('t-spacing').textContent = round(spacing,2);
    byId('t-speed').textContent = round(speed,1);
    byId('t-nozzles').textContent = nozzles;
    byId('t-q').textContent = round(qPerNozzle,2);
    byId('t-tanks').textContent = tankCount;
    byId('t-tankWater').textContent = Math.round(waterPerTank);
    byId('t-tankProd').textContent  = round(prodPerTank,2);

    byId('t-ref').textContent = `Ref: SPR-${Math.random().toString(36).slice(2,8).toUpperCase()}`;
  }

  function downloadTXT(){
    const lines = [
      'JOB: SPRAYING TASK',
      byId('t-date').textContent,
      `–ü–æ–ª–µ: ${byId('t-field').textContent}  –ü–ª–æ—â–∞: ${byId('t-area').textContent} –≥–∞`,
      `–ü—Ä–æ–¥—É–∫—Ç: ${byId('t-prod').textContent}  –î–æ–∑–∞: ${byId('t-dose').textContent} –ª/–≥–∞`,
      `–ù–æ—Ä–º–∞ –≤–∏–ª–∏–≤—É: ${byId('t-waterRate').textContent} –ª/–≥–∞`,
      `–®–∏—Ä–∏–Ω–∞: ${byId('t-width').textContent} –º  –ö—Ä–æ–∫: ${byId('t-spacing').textContent} –º  –®–≤–∏–¥–∫—ñ—Å—Ç—å: ${byId('t-speed').textContent} –∫–º/–≥–æ–¥`,
      `–§–æ—Ä—Å—É–Ω–æ–∫: ${byId('t-nozzles').textContent}  q: ${byId('t-q').textContent} –ª/—Ö–≤`,
      `–ë–∞–∫–∏: ${byId('t-tanks').textContent}  –ó–∞ –±–∞–∫: –≤–æ–¥–∞ ${byId('t-tankWater').textContent} –ª + –ø—Ä–æ–¥—É–∫—Ç ${byId('t-tankProd').textContent} –ª`,
      byId('t-ref').textContent,
      '–ü—ñ–¥–ø–∏—Å: ____________'
    ];
    const blob = new Blob([lines.join('\n')], {type:'text/plain;charset=utf-8'});
    const a = document.createElement('a');
    a.href = URL.createObjectURL(blob);
    a.download = 'spray_job_58mm.txt';
    a.click();
    URL.revokeObjectURL(a.href);
  }

  // –£—Ç–∏–ª—ñ—Ç–∏
  function byId(id){ return document.getElementById(id); }
  function get(id){ return byId(id).value.trim(); }
  function set(id,v){ byId(id).value = v; }
  function num(id){ return parseFloat(byId(id).value||'0'); }
  function flash(msg){ const old=document.title; document.title=msg; setTimeout(()=>document.title=old,900); }

  // –°—Ç–∞—Ä—Ç–æ–≤—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
  calcAll();
</script>
</body>
</html>
