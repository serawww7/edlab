name: Build EDLab manifests

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate manifests (Node, no deps)
        run: |
          set -euo pipefail
          mkdir -p edlab/assets

          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');

          // Всі секції ЖИВУТЬ під 'edlab/'
          const ROOT = 'edlab';
          const SECTIONS = {
            coach:       'coach',
            electric:    'elect_II_kyrs',
            agro:        'agro',
            mech:        'mech',
            tech:        'tech',
          };

          function walk(dir) {
            const out = [];
            if (!fs.existsSync(dir)) return out;
            for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
              const p = path.join(dir, entry.name);
              if (entry.isDirectory()) out.push(...walk(p));
              else if (entry.isFile() && /\.html?$/i.test(entry.name)) out.push(p);
            }
            return out;
          }

          function extractTitle(filePath) {
            try {
              const html = fs.readFileSync(filePath, 'utf8');
              const m = html.match(/<title[^>]*>([\s\S]*?)<\/title>/i);
              if (m && m[1]) return m[1].replace(/\s+/g, ' ').trim().slice(0, 200);
            } catch {}
            const base = path.basename(filePath).replace(/\.html?$/i,'');
            return base.replace(/[-_]/g,' ').trim();
          }

          // Перетворюємо шлях файлу у URL ІЗ ПРЕФІКСОМ '/edlab'
          function toUrl(p) {
            const web = '/' + p.split(path.sep).join('/'); // '/edlab/coach/file.html'
            return web; // вже містить '/edlab'
          }

          const global = {};
          for (const [key, folder] of Object.entries(SECTIONS)) {
            const fsDir = path.join(ROOT, folder);           // напр., 'edlab/coach'
            const files = walk(fsDir).sort();
            global[key] = files.map(fp => {
              const url = toUrl(fp);                         // '/edlab/coach/..'
              const title = extractTitle(fp);
              return { url, title, desc: url };
            });

            // Локальні маніфести-«масиви URL» у кожній секції (опційно)
            if (fs.existsSync(fsDir)) {
              const arr = files.map(toUrl);
              fs.writeFileSync(path.join(fsDir, 'manifest.json'), JSON.stringify(arr, null, 2), 'utf8');
            }
          }

          fs.writeFileSync(
            path.join(ROOT, 'assets','edlab-manifest.json'),  // edlab/assets/...
            JSON.stringify(global, null, 2),
            'utf8'
          );

          console.log('Generated edlab/assets/edlab-manifest.json:');
          for (const k of Object.keys(global)) {
            console.log(k, global[k].length, 'items');
          }
          NODE

      - name: Commit manifests if changed
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add edlab/assets/edlab-manifest.json edlab/coach/manifest.json edlab/elect_II_kyrs/manifest.json edlab/agro/manifest.json edlab/mech/manifest.json edlab/tech/manifest.json 2>/dev/null || true
          if ! git diff --cached --quiet; then
            git commit -m "chore: auto-build manifests (edlab/)"
            git push
          else
            echo "No changes to commit"
          fi
